(this.webpackJsonppersonal_website=this.webpackJsonppersonal_website||[]).push([[0],{220:function(n,e,t){},221:function(n,e,t){},222:function(n,e,t){},223:function(n,e){n.exports='<!doctype html>\n<html style=\'font-size:14px !important\'>\n<head>\n<meta charset=\'UTF-8\'><meta name=\'viewport\' content=\'width=device-width initial-scale=1\'>\n<title>Tree04 - Balancing Binary Search Trees</title><style type=\'text/css\'>html {overflow-x: initial !important;}:root { --bg-color:#ffffff; --text-color:#333333; --select-text-bg-color:#B5D6FC; --select-text-font-color:auto; --monospace:"Lucida Console",Consolas,"Courier",monospace; }\nhtml { font-size: 14px; background-color: var(--bg-color); color: var(--text-color); font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; }\nbody { margin: 0px; padding: 0px; height: auto; bottom: 0px; top: 0px; left: 0px; right: 0px; font-size: 1rem; line-height: 1.42857; overflow-x: hidden; background: inherit; tab-size: 4; }\niframe { margin: auto; }\na.url { word-break: break-all; }\na:active, a:hover { outline: 0px; }\n.in-text-selection, ::selection { text-shadow: none; background: var(--select-text-bg-color); color: var(--select-text-font-color); }\n#write { margin: 0px auto; height: auto; width: inherit; word-break: normal; overflow-wrap: break-word; position: relative; white-space: normal; overflow-x: visible; padding-top: 40px; }\n#write.first-line-indent p { text-indent: 2em; }\n#write.first-line-indent li p, #write.first-line-indent p * { text-indent: 0px; }\n#write.first-line-indent li { margin-left: 2em; }\n.for-image #write { padding-left: 8px; padding-right: 8px; }\nbody.typora-export { padding-left: 30px; padding-right: 30px; }\n.typora-export .footnote-line, .typora-export li, .typora-export p { white-space: pre-wrap; }\n@media screen and (max-width: 500px) {\n  body.typora-export { padding-left: 0px; padding-right: 0px; }\n  #write { padding-left: 20px; padding-right: 20px; }\n  .CodeMirror-sizer { margin-left: 0px !important; }\n  .CodeMirror-gutters { display: none !important; }\n}\n#write li > figure:last-child { margin-bottom: 0.5rem; }\n#write ol, #write ul { position: relative; }\nimg { max-width: 100%; vertical-align: middle; }\nbutton, input, select, textarea { color: inherit; font: inherit; }\ninput[type="checkbox"], input[type="radio"] { line-height: normal; padding: 0px; }\n*, ::after, ::before { box-sizing: border-box; }\n#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p, #write pre { width: inherit; }\n#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p { position: relative; }\np { line-height: inherit; }\nh1, h2, h3, h4, h5, h6 { break-after: avoid-page; break-inside: avoid; orphans: 2; }\np { orphans: 4; }\nh1 { font-size: 2rem; }\nh2 { font-size: 1.8rem; }\nh3 { font-size: 1.6rem; }\nh4 { font-size: 1.4rem; }\nh5 { font-size: 1.2rem; }\nh6 { font-size: 1rem; }\n.md-math-block, .md-rawblock, h1, h2, h3, h4, h5, h6, p { margin-top: 1rem; margin-bottom: 1rem; }\n.hidden { display: none; }\n.md-blockmeta { color: rgb(204, 204, 204); font-weight: 700; font-style: italic; }\na { cursor: pointer; }\nsup.md-footnote { padding: 2px 4px; background-color: rgba(238, 238, 238, 0.7); color: rgb(85, 85, 85); border-radius: 4px; cursor: pointer; }\nsup.md-footnote a, sup.md-footnote a:hover { color: inherit; text-transform: inherit; text-decoration: inherit; }\n#write input[type="checkbox"] { cursor: pointer; width: inherit; height: inherit; }\nfigure { overflow-x: auto; margin: 1.2em 0px; max-width: calc(100% + 16px); padding: 0px; }\nfigure > table { margin: 0px !important; }\ntr { break-inside: avoid; break-after: auto; }\nthead { display: table-header-group; }\ntable { border-collapse: collapse; border-spacing: 0px; width: 100%; overflow: auto; break-inside: auto; text-align: left; }\ntable.md-table td { min-width: 32px; }\n.CodeMirror-gutters { border-right: 0px; background-color: inherit; }\n.CodeMirror-linenumber { user-select: none; }\n.CodeMirror { text-align: left; }\n.CodeMirror-placeholder { opacity: 0.3; }\n.CodeMirror pre { padding: 0px 4px; }\n.CodeMirror-lines { padding: 0px; }\ndiv.hr:focus { cursor: none; }\n#write pre { white-space: pre-wrap; }\n#write.fences-no-line-wrapping pre { white-space: pre; }\n#write pre.ty-contain-cm { white-space: normal; }\n.CodeMirror-gutters { margin-right: 4px; }\n.md-fences { font-size: 0.9rem; display: block; break-inside: avoid; text-align: left; overflow: visible; white-space: pre; background: inherit; position: relative !important; }\n.md-diagram-panel { width: 100%; margin-top: 10px; text-align: center; padding-top: 0px; padding-bottom: 8px; overflow-x: auto; }\n#write .md-fences.mock-cm { white-space: pre-wrap; }\n.md-fences.md-fences-with-lineno { padding-left: 0px; }\n#write.fences-no-line-wrapping .md-fences.mock-cm { white-space: pre; overflow-x: auto; }\n.md-fences.mock-cm.md-fences-with-lineno { padding-left: 8px; }\n.CodeMirror-line, twitterwidget { break-inside: avoid; }\n.footnotes { opacity: 0.8; font-size: 0.9rem; margin-top: 1em; margin-bottom: 1em; }\n.footnotes + .footnotes { margin-top: 0px; }\n.md-reset { margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: top; background: 0px 0px; text-decoration: none; text-shadow: none; float: none; position: static; width: auto; height: auto; white-space: nowrap; cursor: inherit; -webkit-tap-highlight-color: transparent; line-height: normal; font-weight: 400; text-align: left; box-sizing: content-box; direction: ltr; }\nli div { padding-top: 0px; }\nblockquote { margin: 1rem 0px; }\nli .mathjax-block, li p { margin: 0.5rem 0px; }\nli { margin: 0px; position: relative; }\nblockquote > :last-child { margin-bottom: 0px; }\nblockquote > :first-child, li > :first-child { margin-top: 0px; }\n.footnotes-area { color: rgb(136, 136, 136); margin-top: 0.714rem; padding-bottom: 0.143rem; white-space: normal; }\n#write .footnote-line { white-space: pre-wrap; }\n@media print {\n  body, html { border: 1px solid transparent; height: 99%; break-after: avoid; break-before: avoid; }\n  #write { margin-top: 0px; padding-top: 0px; border-color: transparent !important; }\n  .typora-export * { -webkit-print-color-adjust: exact; }\n  html.blink-to-pdf { font-size: 13px; }\n  .typora-export #write { padding-left: 32px; padding-right: 32px; padding-bottom: 0px; break-after: avoid; }\n  .typora-export #write::after { height: 0px; }\n}\n.footnote-line { margin-top: 0.714em; font-size: 0.7em; }\na img, img a { cursor: pointer; }\npre.md-meta-block { font-size: 0.8rem; min-height: 0.8rem; white-space: pre-wrap; background: rgb(204, 204, 204); display: block; overflow-x: hidden; }\np > .md-image:only-child:not(.md-img-error) img, p > img:only-child { display: block; margin: auto; }\np > .md-image:only-child { display: inline-block; width: 100%; }\n#write .MathJax_Display { margin: 0.8em 0px 0px; }\n.md-math-block { width: 100%; }\n.md-math-block:not(:empty)::after { display: none; }\n[contenteditable="true"]:active, [contenteditable="true"]:focus, [contenteditable="false"]:active, [contenteditable="false"]:focus { outline: 0px; box-shadow: none; }\n.md-task-list-item { position: relative; list-style-type: none; }\n.task-list-item.md-task-list-item { padding-left: 0px; }\n.md-task-list-item > input { position: absolute; top: 0px; left: 0px; margin-left: -1.2em; margin-top: calc(1em - 10px); border: none; }\n.math { font-size: 1rem; }\n.md-toc { min-height: 3.58rem; position: relative; font-size: 0.9rem; border-radius: 10px; }\n.md-toc-content { position: relative; margin-left: 0px; }\n.md-toc-content::after, .md-toc::after { display: none; }\n.md-toc-item { display: block; color: rgb(65, 131, 196); }\n.md-toc-item a { text-decoration: none; }\n.md-toc-inner:hover { text-decoration: underline; }\n.md-toc-inner { display: inline-block; cursor: pointer; }\n.md-toc-h1 .md-toc-inner { margin-left: 0px; font-weight: 700; }\n.md-toc-h2 .md-toc-inner { margin-left: 2em; }\n.md-toc-h3 .md-toc-inner { margin-left: 4em; }\n.md-toc-h4 .md-toc-inner { margin-left: 6em; }\n.md-toc-h5 .md-toc-inner { margin-left: 8em; }\n.md-toc-h6 .md-toc-inner { margin-left: 10em; }\n@media screen and (max-width: 48em) {\n  .md-toc-h3 .md-toc-inner { margin-left: 3.5em; }\n  .md-toc-h4 .md-toc-inner { margin-left: 5em; }\n  .md-toc-h5 .md-toc-inner { margin-left: 6.5em; }\n  .md-toc-h6 .md-toc-inner { margin-left: 8em; }\n}\na.md-toc-inner { font-size: inherit; font-style: inherit; font-weight: inherit; line-height: inherit; }\n.footnote-line a:not(.reversefootnote) { color: inherit; }\n.md-attr { display: none; }\n.md-fn-count::after { content: "."; }\ncode, pre, samp, tt { font-family: var(--monospace); }\nkbd { margin: 0px 0.1em; padding: 0.1em 0.6em; font-size: 0.8em; color: rgb(36, 39, 41); background: rgb(255, 255, 255); border: 1px solid rgb(173, 179, 185); border-radius: 3px; box-shadow: rgba(12, 13, 14, 0.2) 0px 1px 0px, rgb(255, 255, 255) 0px 0px 0px 2px inset; white-space: nowrap; vertical-align: middle; }\n.md-comment { color: rgb(162, 127, 3); opacity: 0.8; font-family: var(--monospace); }\ncode { text-align: left; vertical-align: initial; }\na.md-print-anchor { white-space: pre !important; border-width: initial !important; border-style: none !important; border-color: initial !important; display: inline-block !important; position: absolute !important; width: 1px !important; right: 0px !important; outline: 0px !important; background: 0px 0px !important; text-decoration: initial !important; text-shadow: initial !important; }\n.md-inline-math .MathJax_SVG .noError { display: none !important; }\n.html-for-mac .inline-math-svg .MathJax_SVG { vertical-align: 0.2px; }\n.md-math-block .MathJax_SVG_Display { text-align: center; margin: 0px; position: relative; text-indent: 0px; max-width: none; max-height: none; min-height: 0px; min-width: 100%; width: auto; overflow-y: hidden; display: block !important; }\n.MathJax_SVG_Display, .md-inline-math .MathJax_SVG_Display { width: auto; margin: inherit; display: inline-block !important; }\n.MathJax_SVG .MJX-monospace { font-family: var(--monospace); }\n.MathJax_SVG .MJX-sans-serif { font-family: sans-serif; }\n.MathJax_SVG { display: inline; font-style: normal; font-weight: 400; line-height: normal; zoom: 90%; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; }\n.MathJax_SVG * { transition: none 0s ease 0s; }\n.MathJax_SVG_Display svg { vertical-align: middle !important; margin-bottom: 0px !important; margin-top: 0px !important; }\n.os-windows.monocolor-emoji .md-emoji { font-family: "Segoe UI Symbol", sans-serif; }\n.md-diagram-panel > svg { max-width: 100%; }\n[lang="flow"] svg, [lang="mermaid"] svg { max-width: 100%; height: auto; }\n[lang="mermaid"] .node text { font-size: 1rem; }\ntable tr th { border-bottom: 0px; }\nvideo { max-width: 100%; display: block; margin: 0px auto; }\niframe { max-width: 100%; width: 100%; border: none; }\n.highlight td, .highlight tr { border: 0px; }\nsvg[id^="mermaidChart"] { line-height: 1em; }\nmark { background: rgb(255, 255, 0); color: rgb(0, 0, 0); }\n.md-html-inline .md-plain, .md-html-inline strong, mark .md-inline-math, mark strong { color: inherit; }\nmark .md-meta { color: rgb(0, 0, 0); opacity: 0.3 !important; }\n\n\n.CodeMirror { height: auto; }\n.CodeMirror.cm-s-inner { background: inherit; }\n.CodeMirror-scroll { overflow: auto hidden; z-index: 3; }\n.CodeMirror-gutter-filler, .CodeMirror-scrollbar-filler { background-color: rgb(255, 255, 255); }\n.CodeMirror-gutters { border-right: 1px solid rgb(221, 221, 221); background: inherit; white-space: nowrap; }\n.CodeMirror-linenumber { padding: 0px 3px 0px 5px; text-align: right; color: rgb(153, 153, 153); }\n.cm-s-inner .cm-keyword { color: rgb(119, 0, 136); }\n.cm-s-inner .cm-atom, .cm-s-inner.cm-atom { color: rgb(34, 17, 153); }\n.cm-s-inner .cm-number { color: rgb(17, 102, 68); }\n.cm-s-inner .cm-def { color: rgb(0, 0, 255); }\n.cm-s-inner .cm-variable { color: rgb(0, 0, 0); }\n.cm-s-inner .cm-variable-2 { color: rgb(0, 85, 170); }\n.cm-s-inner .cm-variable-3 { color: rgb(0, 136, 85); }\n.cm-s-inner .cm-string { color: rgb(170, 17, 17); }\n.cm-s-inner .cm-property { color: rgb(0, 0, 0); }\n.cm-s-inner .cm-operator { color: rgb(152, 26, 26); }\n.cm-s-inner .cm-comment, .cm-s-inner.cm-comment { color: rgb(170, 85, 0); }\n.cm-s-inner .cm-string-2 { color: rgb(255, 85, 0); }\n.cm-s-inner .cm-meta { color: rgb(85, 85, 85); }\n.cm-s-inner .cm-qualifier { color: rgb(85, 85, 85); }\n.cm-s-inner .cm-builtin { color: rgb(51, 0, 170); }\n.cm-s-inner .cm-bracket { color: rgb(153, 153, 119); }\n.cm-s-inner .cm-tag { color: rgb(17, 119, 0); }\n.cm-s-inner .cm-attribute { color: rgb(0, 0, 204); }\n.cm-s-inner .cm-header, .cm-s-inner.cm-header { color: rgb(0, 0, 255); }\n.cm-s-inner .cm-quote, .cm-s-inner.cm-quote { color: rgb(0, 153, 0); }\n.cm-s-inner .cm-hr, .cm-s-inner.cm-hr { color: rgb(153, 153, 153); }\n.cm-s-inner .cm-link, .cm-s-inner.cm-link { color: rgb(0, 0, 204); }\n.cm-negative { color: rgb(221, 68, 68); }\n.cm-positive { color: rgb(34, 153, 34); }\n.cm-header, .cm-strong { font-weight: 700; }\n.cm-del { text-decoration: line-through; }\n.cm-em { font-style: italic; }\n.cm-link { text-decoration: underline; }\n.cm-error { color: red; }\n.cm-invalidchar { color: red; }\n.cm-constant { color: rgb(38, 139, 210); }\n.cm-defined { color: rgb(181, 137, 0); }\ndiv.CodeMirror span.CodeMirror-matchingbracket { color: rgb(0, 255, 0); }\ndiv.CodeMirror span.CodeMirror-nonmatchingbracket { color: rgb(255, 34, 34); }\n.cm-s-inner .CodeMirror-activeline-background { background: inherit; }\n.CodeMirror { position: relative; overflow: hidden; }\n.CodeMirror-scroll { height: 100%; outline: 0px; position: relative; box-sizing: content-box; background: inherit; }\n.CodeMirror-sizer { position: relative; }\n.CodeMirror-gutter-filler, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-vscrollbar { position: absolute; z-index: 6; display: none; }\n.CodeMirror-vscrollbar { right: 0px; top: 0px; overflow: hidden; }\n.CodeMirror-hscrollbar { bottom: 0px; left: 0px; overflow: hidden; }\n.CodeMirror-scrollbar-filler { right: 0px; bottom: 0px; }\n.CodeMirror-gutter-filler { left: 0px; bottom: 0px; }\n.CodeMirror-gutters { position: absolute; left: 0px; top: 0px; padding-bottom: 30px; z-index: 3; }\n.CodeMirror-gutter { white-space: normal; height: 100%; box-sizing: content-box; padding-bottom: 30px; margin-bottom: -32px; display: inline-block; }\n.CodeMirror-gutter-wrapper { position: absolute; z-index: 4; background: 0px 0px !important; border: none !important; }\n.CodeMirror-gutter-background { position: absolute; top: 0px; bottom: 0px; z-index: 4; }\n.CodeMirror-gutter-elt { position: absolute; cursor: default; z-index: 4; }\n.CodeMirror-lines { cursor: text; }\n.CodeMirror pre { border-radius: 0px; border-width: 0px; background: 0px 0px; font-family: inherit; font-size: inherit; margin: 0px; white-space: pre; overflow-wrap: normal; color: inherit; z-index: 2; position: relative; overflow: visible; }\n.CodeMirror-wrap pre { overflow-wrap: break-word; white-space: pre-wrap; word-break: normal; }\n.CodeMirror-code pre { border-right: 30px solid transparent; width: fit-content; }\n.CodeMirror-wrap .CodeMirror-code pre { border-right: none; width: auto; }\n.CodeMirror-linebackground { position: absolute; left: 0px; right: 0px; top: 0px; bottom: 0px; z-index: 0; }\n.CodeMirror-linewidget { position: relative; z-index: 2; overflow: auto; }\n.CodeMirror-wrap .CodeMirror-scroll { overflow-x: hidden; }\n.CodeMirror-measure { position: absolute; width: 100%; height: 0px; overflow: hidden; visibility: hidden; }\n.CodeMirror-measure pre { position: static; }\n.CodeMirror div.CodeMirror-cursor { position: absolute; visibility: hidden; border-right: none; width: 0px; }\n.CodeMirror div.CodeMirror-cursor { visibility: hidden; }\n.CodeMirror-focused div.CodeMirror-cursor { visibility: inherit; }\n.cm-searching { background: rgba(255, 255, 0, 0.4); }\n@media print {\n  .CodeMirror div.CodeMirror-cursor { visibility: hidden; }\n}\n\n\n/*\nBased off ursine-umbra\nMade by Toshi Tabata\n */\n\n/*\n    Name: IntelliJ IDEA darcula theme\n    From IntelliJ IDEA by JetBrains\n*/\n\n.cm-s-inner  { font-family: Consolas, Menlo, Monaco, \'Lucida Console\', \'Liberation Mono\', \'DejaVu Sans Mono\', \'Bitstream Vera Sans Mono\', \'Courier New\', monospace, serif;}\n.cm-s-inner.CodeMirror { background: #2B2B2B; color: #A9B7C6; }\n\n.cm-s-inner span.cm-meta { color: #BBB529; }\n.cm-s-inner span.cm-number { color: #6897BB; }\n.cm-s-inner span.cm-keyword { color: #CC7832; line-height: 1em; font-weight: bold; }\n.cm-s-inner span.cm-def { color: #A9B7C6; }\n.cm-s-inner span.cm-variable { color: #A9B7C6; }\n.cm-s-inner span.cm-variable-2 { color: #A9B7C6; }\n.cm-s-inner span.cm-variable-3 { color: #CC7832; }\n.cm-s-inner span.cm-type { color: #AABBCC; font-weight: bold; }\n.cm-s-inner span.cm-property { color: #CC7832; }\n.cm-s-inner span.cm-operator { color: #A9B7C6; }\n.cm-s-inner span.cm-string { color: #6A8759; }\n.cm-s-inner span.cm-string-2 { color: #6A8759; }\n.cm-s-inner span.cm-comment { color: #808080; font-style: italic; }\n\n.cm-s-inner span.cm-link { color: #CC7832; }\n.cm-s-inner span.cm-atom { color: #CC7832; }\n.cm-s-inner span.cm-error { color: #BC3F3C; }\n.cm-s-inner span.cm-tag { color: #FFC66D;}\n.cm-s-inner span.cm-attribute { color: #6897bb; }\n.cm-s-inner span.cm-qualifier { color: #6A8759; }\n.cm-s-inner span.cm-bracket { color: #FFC66D; }\n.cm-s-inner span.cm-builtin { color: #FF9E59; }\n.cm-s-inner span.cm-special { color: #FF9E59; }\n.cm-s-inner span.cm-matchhighlight { color: #FFFFFF; background-color: rgba(50, 89, 48, .7); font-weight: normal;}\n.cm-s-inner span.cm-searching { color: #FFFFFF; background-color: rgba(61, 115, 59, .7); font-weight: normal;}\n\n.cm-s-inner .CodeMirror-cursor { border-left: solid thin #f8f8f2 !important; }\n.cm-s-inner .CodeMirror-activeline-background { background: #323232; }\n.cm-s-inner .CodeMirror-gutters { background: #313335; border-right: 1px solid #313335; }\n.cm-s-inner .CodeMirror-guttermarker { color: #FFEE80; }\n.cm-s-inner .CodeMirror-guttermarker-subtle { color: #D0D0D0; }\n.cm-s-inner .CodeMirrir-linenumber { color: #606366; }\n.cm-s-inner .CodeMirror-matchingbracket { background-color: #3B514D; color: #FFEF28 !important; font-weight: bold; }\n\n.cm-s-inner .CodeMirror-selected, .cm-s-inner .CodeMirror-selectedtext {\n  background: #214283 !important;\n  color: inherit;\n  text-shadow: none;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n#fences-auto-suggest .active {\n  background: #3c3c3c;\n}\n\n#write .code-tooltip {\n  bottom: initial;\n  top: calc(100% - 1px);\n  background: #282a36;\n  border: 1px solid #3c3c3c;\n  border-top: 0;\n}\n\n.auto-suggest-container {\n  border-color: #5b5b5b;\n}\n\n.auto-suggest-container .autoComplt-hint.active {\n  background: #5b5b5b;\n  color: #fff;\n}\n\n:root {\n  --bg-color: #1e2022;\n  --text-color: #ddd;\n  --md-char-color: #5b5b5b;\n  --meta-content-color: #757575;\n  --table-border-color: #5b5b5b;\n  --primary-color: #428bca;\n  --primary-btn-border-color: #285e8e;\n  --primary-btn-text-color: #ddd;\n  --window-border: 1px solid #16161a;\n  --active-file-bg-color: #16161a;\n  --active-file-text-color: inherit;\n  --active-file-border-color: #757575;\n  --active-search-item-bg-color: #212121;\n  --side-bar-bg-color: #2b2b2b;\n  --item-hover-bg-color: #1e2022;\n  --item-hover-text-color: #fff;\n  --search-select-text-color: #ddd;\n  --search-select-bg-color: #428bca90;\n  --rawblock-edit-panel-bd: #3c3c3c;\n  --monospace: \'Cousine\', \'Consolas\', monospace;\n  --node-fill: #1e2022;\n  --node-border: #ffffff26;\n}\n\nhtml, body {\n  font-family: \'Avenir Next LT Pro\', \'Lato\', sans-serif;\n}\n\nbody {\n  font-size: 1em;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-family: \'Adelle\', \'Times New Roman\', serif;\n}\n\np {\n  margin: .5rem 0;\n}\n\na {\n  color: #6bcafb;\n}\n\ndel {\n  color: #5b5b5b;\n}\n\nmark {\n  padding: 2px 1px;\n  background: #196186d0;\n  color: inherit;\n}\n\nblockquote {\n  position: relative;\n  margin: 1rem 0 1rem 2rem;\n  font-family: \'Adelle\', \'Times New Roman\', serif;\n}\n\nblockquote::before {\n  content: \'\';\n  position: absolute;\n  left: -2rem;\n  height: 100%;\n  width: .25rem;\n  background: #428bca;\n}\n\ncode,\n.md-fences,\ntt {\n  font-family: \'Cousine\', \'Consolas\', monospace;\n  font-size: 1rem;\n}\n\ncode {\n  font-size: .9em;\n  border: 1px solid #ffffff26;\n  border-radius: .25rem;\n  padding: 0 .125rem;\n  background: #0000001a;\n}\n\nhr {\n  border-color: #5b5b5b;\n}\n\ntable {\n  border: 1px solid #5b5b5b;\n  margin: 1rem 0;\n}\n\ntable tr:nth-child(2n) {\n  background: #3c3c3c;\n}\n\nthead {\n  background: #4d4d4d;\n}\n\ntd, th {\n  padding: .35rem .7rem;\n  border: 1px solid #5b5b5b;\n}\n\n#write {\n  position: static;\n  width: 90%;\n  max-width: 700px;\n  line-height: 1.6;\n  transform: none;\n}\n\n#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p, #write pre {\n  width: auto;\n}\n\n#write h1::before, #write h2::before, #write h3::before, #write h4::before, #write h5::before, #write h6::before {\n  position: absolute;\n  right: calc(100% + 10px);\n  bottom: 0;\n  color: #5b5b5b;\n  font-size: 1rem;\n  font-weight: bold;\n  font-variant: \'small-caps\';\n  border: 0;\n  border-radius: 0;\n  left: auto;\n  float: none;\n  padding: 0;\n  vertical-align: baseline;\n  line-height: 20px;\n}\n\n#write h1 {\n  font-size: 1.8rem;\n  margin: 1rem 0;\n}\n\n#write h1::before {\n  content: \'\';\n  bottom: .45rem;\n}\n\n#write h2 {\n  font-size: 1.4rem;\n  margin: .7rem 0;\n}\n\n#write h2::before {\n  content: \'\';\n  bottom: .2rem;\n}\n\n#write h3 {\n  font-size: 1.2rem;\n  margin: .5rem 0;\n}\n\n#write h3::before {\n  content: \'\';\n  bottom: .18rem;\n}\n\n#write h4 {\n  font-size: 1.1rem;\n  margin: .2rem 0;\n}\n\n#write h4::before {\n  content: \'\';\n  bottom: .15rem;\n}\n\n#write h5, #write h6 {\n  font-size: 1rem;\n  margin: 0;\n}\n\n#write h5::before, #write h6::before {\n  bottom: .1rem;\n}\n\n#write h5::before {\n  content: \'\';\n}\n\n#write h6::before {\n  content: \'\';\n}\n\n#write ol, #write ul {\n  padding-left: 2rem;\n  margin: .5rem 0;\n}\n\n#write ol > li, #write ul > li {\n  color: #428bca;\n}\n\n#write ol > li > *, #write ul > li > * {\n  color: #ddd;\n}\n\n#write ol > li > *:not(ol):not(ul), #write ul > li > *:not(ol):not(ul) {\n  padding-left: .25rem;\n}\n\n#write ul {\n  list-style-type: disc;\n}\n\n#write .md-task-list-item > input {\n  -webkit-appearance: initial;\n  display: block;\n  position: absolute;\n  border: 1px solid #5b5b5b;\n  border-radius: .25rem;\n  margin-top: .1rem;\n  margin-left: -1.8rem;\n  height: 1.2rem;\n  width: 1.2rem;\n  transition: background 0.3s;\n}\n\n#write .md-task-list-item > input:focus {\n  outline: none;\n  box-shadow: none;\n}\n\n#write .md-task-list-item > input:hover {\n  background: #3c3c3c;\n}\n\n#write .md-task-list-item > input[checked]::before {\n  content: \'\';\n  position: absolute;\n  top: 20%;\n  left: 50%;\n  height: 60%;\n  width: 2px;\n  transform: rotate(40deg);\n  background: #ddd;\n}\n\n#write .md-task-list-item > input[checked]::after {\n  content: \'\';\n  position: absolute;\n  top: 46%;\n  left: 25%;\n  height: 30%;\n  width: 2px;\n  transform: rotate(-40deg);\n  background: #ddd;\n}\n\n#write .md-task-list-item > p {\n  transition: color 0.3s;\n}\n\n#write .md-task-list-item.task-list-done > p {\n  color: #5b5b5b;\n  text-decoration: line-through;\n}\n\n#write .md-meta-block {\n  background-color: transparent;\n  border-bottom: 1px solid #5b5b5b;\n  padding-bottom: 1rem;\n  opacity: .8;\n}\n\n#write .md-table-edit {\n  border-top: 1px solid #5b5b5b;\n  margin-top: -29px !important;\n  padding: 3px 0;\n}\n\n#write .md-grid-board a.md-active, #write .md-grid-board a:hover {\n  background: #428bca;\n  color: #5b5b5b;\n}\n\n#write .md-grid-board tr[row=\'1\'] a.md-active, #write .md-grid-board tr[row=\'1\'] a:hover {\n  background: #285e8e;\n  color: #5b5b5b;\n}\n\n#write .btn-group .btn + .btn {\n  margin-left: 0;\n}\n\n#write .btn-default.active, #write .btn-default.focus, #write .btn-default:active, #write .btn-default:focus, #write .btn-default:hover,\n.open > #write .btn-default.dropdown-toggle {\n  background: transparent;\n  color: inherit;\n}\n\n#write .typora-table-drag-area::after {\n  content: \'\';\n  position: absolute;\n  border: 2px solid #ddd;\n  opacity: 0;\n  transition: opacity .4s;\n}\n\n#typora-table-row-tracker #write .typora-table-drag-area::after,\n#typora-table-col-tracker #write .typora-table-drag-area::after {\n  opacity: 1;\n}\n\n#typora-table-row-tracker #write .typora-table-drag-area::after {\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 0;\n  height: 100%;\n}\n\n#typora-table-col-tracker #write .typora-table-drag-area::after {\n  top: 50%;\n  left: 0;\n  transform: translateY(-50%);\n  width: 100%;\n  height: 0;\n}\n\n#write .md-toc-tooltip {\n  z-index: 10;\n}\n\n#write .md-toc-item {\n  font-size: 1.1rem;\n  color: var(--primary-btn-border-color);\n}\n\n#write .md-toc-h1 {\n  font-family: \'Adelle\', \'Times New Roman\', serif;\n  font-size: 1.3rem;\n}\n\n#write .md-toc-h2 {\n  font-size: 1.2rem;\n}\n\n#write .md-footnote {\n  font-family: \'Adelle\', \'Times New Roman\', serif;\n  font-size: .8em;\n  border: 1px solid #3c3c3c;\n  padding: 0 4px;\n  background: #111;\n  color: #ddd;\n}\n\n#write .md-def-split {\n  min-width: 1ch;\n}\n\n#write .md-def-name::before, #write .md-def-name::after {\n  color: #757575;\n}\n\n#write .md-image > .md-meta {\n  color: #757575;\n}\n\n#write .md-rawblock-tooltip {\n  top: -1.5rem;\n  height: 1.5rem;\n  padding: .25rem;\n}\n\n#write .md-search-hit {\n  background: #428bca40;\n  border-radius: .125rem;\n}\n\n#write .md-search-select {\n  background: #428bca90;\n  border: 1px solid #9292928f;\n  padding: 0 1px;\n}\n\n#write pre[lang="mermaid"] .md-diagram-panel {\n  border-color: #ffffff26;\n}\n\n#write pre[lang="mermaid"] tspan {\n  fill: #ddd;\n}\n\n#write pre[lang="mermaid"][mermaid-type="graph"] path.path {\n  marker-end: url("file:///C://Users//super//AppData//Roaming//Typora/themes/#arrowhead");\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .section1 {\n  fill: transparent;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .section2 {\n  fill: #3c3c3c;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .section3 {\n  fill: transparent;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .section4 {\n  fill: #3c3c3c;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .section5 {\n  fill: transparent;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .section6 {\n  fill: #3c3c3c;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .section7 {\n  fill: transparent;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .section8 {\n  fill: #3c3c3c;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .section9 {\n  fill: transparent;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .section10 {\n  fill: #3c3c3c;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .section11 {\n  fill: transparent;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .section12 {\n  fill: #3c3c3c;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .section13 {\n  fill: transparent;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .section14 {\n  fill: #3c3c3c;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .section15 {\n  fill: transparent;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .section16 {\n  fill: #3c3c3c;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .section17 {\n  fill: transparent;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .section18 {\n  fill: #3c3c3c;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .section19 {\n  fill: transparent;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .task {\n  fill: #8a88c9;\n  stroke: #5f5caf;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .task[class*="done"] {\n  fill: #6b6b6b;\n  stroke: #3d3d3d;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .task[class*="active"] {\n  fill: #737cff;\n  stroke: #413da0;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .task[class*="crit"] {\n  fill: #d66979;\n  stroke: #8f1d22;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .task[class*="Crit"] {\n  stroke: #8f1d22;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] text {\n  fill: #ddd;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] text[class*="activeText"], #write pre[lang="mermaid"][mermaid-type="gantt"] text[class*="activeCritText"] {\n  fill: #ddd !important;\n  font-weight: bold;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] text[class*="doneText"], #write pre[lang="mermaid"][mermaid-type="gantt"] text[class*="doneCritText"] {\n  fill: #5b5b5b !important;\n}\n\n#write pre[lang="mermaid"][mermaid-type="gantt"] .grid .tick line {\n  stroke: #ddd;\n}\n\n.modal-content .modal-header, .modal-content .modal-footer {\n  border-color: #5b5b5b;\n}\n\n.modal-content input, .modal-content button.btn-default {\n  border-color: #5b5b5b;\n}\n\n.modal-content input {\n  background: transparent;\n}\n\n#typora-quick-open {\n  top: 32px;\n  width: 40%;\n  min-width: 420px;\n  transform: translateX(-50%);\n  margin-left: 0;\n}\n\n.mac-seamless-mode #typora-quick-open {\n  top: 50px;\n}\n\n#typora-quick-open #typora-quick-open-input input {\n  border-color: #428bca;\n}\n\n#typora-quick-open .ty-quick-open-category-title {\n  height: auto;\n  padding-top: 4px;\n  padding-left: 12px;\n}\n\n#typora-quick-open .typora-quick-open-item {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  cursor: pointer;\n}\n\n#typora-quick-open .typora-quick-open-item:not(.active):hover {\n  background: #212121;\n}\n\n#typora-quick-open .typora-quick-open-item-path {\n  margin-top: -2px;\n}\n\n.ty-tooltip {\n  background: #2b2b2b;\n  color: #ddd;\n  border-color: #00000040;\n}\n\n.code-tooltip.md-f-tooltip, .code-tooltip.md-f-tooltip .md-arrow::after {\n  background: #111 !important;\n  color: #ddd !important;\n}\n\n.code-tooltip.md-f-tooltip a {\n  color: #6bcafb;\n}\n\n.on-focus-mode .md-end-block:not(.md-focus):not(.md-focus-container), .on-focus-mode .md-end-block:not(.md-focus):not(.md-focus-container) *, .on-focus-mode .md-end-block:not(.md-focus):not(.md-focus-container) ol, .on-focus-mode .md-end-block:not(.md-focus):not(.md-focus-container) ul {\n  color: #5b5b5b !important;\n}\n\n.on-focus-mode .md-end-block:not(.md-focus):not(.md-focus-container) img, .on-focus-mode .md-end-block:not(.md-focus):not(.md-focus-container) .md-footnote, .on-focus-mode .md-end-block:not(.md-focus):not(.md-focus-container) .md-emoji {\n  opacity: .5;\n}\n\n.on-focus-mode .md-end-block:not(.md-focus):not(.md-focus-container) mark {\n  background: #3c3c3c;\n}\n\n.on-focus-mode blockquote .md-end-block:not(.md-focus):not(.md-focus-container)::before {\n  opacity: .5;\n}\n\n.on-focus-mode li:not(.md-focus-container)::before {\n  opacity: .5;\n}\n\n#typora-sidebar {\n  border-right: 1px solid #19191c;\n}\n\n#typora-sidebar .sidebar-tabs {\n  font-family: \'Adelle\', \'Times New Roman\', serif;\n  border-bottom: 1px solid #19191c;\n}\n\n#typora-sidebar .file-list-item-file-name {\n  font-family: \'Adelle\', \'Times New Roman\', serif;\n  font-size: 1.2em;\n}\n\n#typora-sidebar #file-library-search-input {\n  background: #2b2b2b;\n}\n\n#typora-sidebar #file-library-search .file-list-item-file-name {\n  font-size: 1.1rem;\n}\n\n#typora-sidebar #file-library-search .ty-search-item.active {\n  background: #212121;\n}\n\n#typora-sidebar .file-list-item-summary,\n#typora-sidebar .ty-search-item-line {\n  font-family: \'Avenir Next LT Pro\', \'Lato\', sans-serif;\n}\n\n#typora-sidebar .ty-file-search-match-text,\n#typora-sidebar .ty-outline-hit {\n  font-weight: bold;\n  background: transparent;\n}\n\n#typora-sidebar #outline-content {\n  line-height: 1.4em;\n}\n\n#typora-sidebar #outline-content .outline-h1 > .outline-item {\n  font-family: \'Adelle\', \'Times New Roman\', serif;\n}\n\n#typora-sidebar .outline-title-wrapper,\n#typora-sidebar .outline-item-wrapper.outline-h1 > .outline-item {\n  font-family: \'Adelle\', \'Times New Roman\', serif;\n}\n\n#typora-sidebar .file-library-node,\n#typora-sidebar .file-library-node .file-node-background {\n  transition: background .4s;\n}\n\n#typora-sidebar .file-tree-node.file-library-file-node:not(.active):hover .file-node-background,\n#typora-sidebar .file-list-item.file-library-node:not(.active):hover {\n  background: #1e2022;\n}\n\n#typora-sidebar .file-tree-node.file-library-file-node.active .file-node-background,\n#typora-sidebar .file-list-item.file-library-file-node.active {\n  border-left: 5px solid #428bca;\n}\n\n#typora-sidebar .blink-area {\n  animation: none;\n}\n\n#typora-sidebar #ty-sidebar-footer {\n  border-top: 1px solid #19191c;\n}\n\n#typora-sidebar #ty-sidebar-footer .sidebar-footer-item {\n  transition: background .3s;\n}\n\n.dropdown-menu .active a,\n.dropdown-menu .has-extra-menu.active a,\n.dropdown-menu .has-btn-submenu .menu-style-btn.active, #footer-word-count-info .ty-footer-word-count-all tr:hover,\n#ty-spell-check-dict-missing-menu li:hover, .ty-spell-check-panel-item.ty-active, .ty-spell-check-panel-item:hover, .footer-item:hover {\n  background: #ddd !important;\n  color: #2b2b2b !important;\n}\n\n.btn-default:hover {\n  background: #3c3c3c;\n}\n\nfooter.ty-footer {\n  border-top: 0;\n}\n\n#outline-btn:hover {\n  color: inherit;\n}\n\n.form-control:focus {\n  border-color: #428bca;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 2px #428bca;\n}\n\n.megamenu-opened header {\n  background-image: none;\n}\n\n#top-titlebar, #top-titlebar * {\n  color: inherit;\n}\n\n#megamenu-content {\n  padding-top: 28px;\n  background: #2b2b2b;\n  color: #ddd;\n}\n\n#megamenu-content .long-btn {\n  border-color: #9292928f;\n  transition: border-color .4s;\n}\n\n#megamenu-content .long-btn:hover {\n  border-color: #428bca;\n  background: #1e2022;\n  color: #fff !important;\n}\n\n#megamenu-menu-panel:not(:first-of-type) {\n  margin-top: 48px;\n}\n\n#recent-file-panel-action-btn {\n  background: inherit;\n  border-color: #9292928f;\n  transition: all .4s;\n}\n\n#recent-file-panel-action-btn:hover {\n  border-color: #428bca;\n  background: #1e2022;\n  color: #fff;\n}\n\n#recent-document-table {\n  background-color: inherit;\n}\n\n#recent-file-panel tbody tr:nth-child(2n-1) {\n  background-color: inherit;\n}\n\n#recent-file-panel tbody tr:hover {\n  background-color: #1e2022 !important;\n}\n\n#recent-file-panel tbody tr:hover td:nth-child(1) {\n  color: #fff;\n}\n\n#megamenu-menu-sidebar {\n  background-color: #1e2022;\n  color: #ddd;\n}\n\n.megamenu-menu-header,\n.megamenu-menu-list li:not(.saved) a {\n  transition: all .4s;\n}\n\n.megamenu-menu-header {\n  border-bottom: 1px solid #16161a;\n}\n\n.megamenu-menu-header:hover {\n  background: #161819;\n}\n\n.megamenu-menu-list li:not(.saved) a:not(.active):hover,\n.megamenu-menu-list li a.active {\n  background: #101010 !important;\n}\n\n#m-saved {\n  background: inherit;\n  color: inherit;\n}\n\n#megamenu-menu-list {\n  margin: 0;\n}\n\n.theme-preview-div {\n  transition: all .4s;\n}\n\n.theme-preview-div:hover {\n  border: 4px solid #285e8e;\n}\n\n.theme-preview-div.active, .theme-preview-div.active:hover {\n  border: 4px solid #428bca;\n}\n\n.theme-preview-div.active i {\n  color: #428bca;\n}\n\n.ty-preferences .window {\n  background: #2b2b2b;\n}\n\n.ty-preferences .nav-group-item {\n  background: transparent;\n  color: #ddd;\n  cursor: pointer;\n}\n\n.ty-preferences .nav-group-item:hover {\n  background: #1e2022;\n  color: inherit;\n}\n\n.ty-preferences .nav-group-item:active, .ty-preferences .nav-group-item.active {\n  background: #181818;\n  color: inherit;\n}\n\n.ty-preferences .btn-default {\n  background: transparent;\n  color: inherit;\n  border-color: #9292928f;\n  cursor: pointer;\n}\n\n.ty-preferences .btn-default:hover {\n  border-color: #428bca;\n  background: #1e2022;\n  color: #fff;\n}\n\n.ty-preferences .btn-default:active, .ty-preferences .btn-default.active {\n  background: #181818;\n}\n\n.ty-preferences select,\n.ty-preferences ul.dropdown-menu {\n  border-color: #9292928f;\n  background: #2b2b2b;\n}\n\n.ty-preferences ul.dropdown-menu li {\n  background: #2b2b2b;\n}\n\n.ty-preferences ul.dropdown-menu li:hover {\n  background: #1e2022;\n}\n\n.cm-s-typora-default .cm-s-inner.CodeMirror-line {\n  border: 0 !important;\n}\n\n#write > p:first-child:empty {\n  position: static;\n}\n\n#write > p:first-child:not(:only-child)::before, #write > p:only-child::before {\n  content: \'\';\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: url("file:///C://Users//super//AppData//Roaming//Typora/themes/darcula/tiger.png") no-repeat 45% 90% transparent;\n  background-size: cover;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  opacity: 0;\n}\n\n#write > p:only-child:empty::before {\n  opacity: 1;\n}\n\n@media print {\n  #write ol > li, #write ul > li {\n    color: #ddd;\n  }\n}\n\n\n\n</style>\n</head>\n<body class=\'typora-export os-windows\' >\n<div  id=\'write\'  class = \'is-node\'><h1><a name="tree04---balancing-binary-search-trees" class="md-header-anchor"></a><span>Tree04 - Balancing Binary Search Trees</span></h1><ul><li><span>Tree Rotation</span></li><li><span>Root insertion</span></li><li><span>Partitioning</span></li></ul><p>&nbsp;</p><h2><a name="-tree-rotation" class="md-header-anchor"></a><span>Tree Rotation</span></h2><p><img src="Tree04 - Balancing Binary Search Trees.assets/image-20200323134828807.png" referrerpolicy="no-referrer" alt="image-20200323134828807"></p><ul><li><p><span>Reconnecting only 2 edges</span></p></li><li><p><span>Making a child node the new parent node</span></p></li><li><p><strong><u><span>If I&#39;m rotating, right, I&#39;m making left node the new root node</span></u></strong></p><ul><li><span>Easiest way to figure out how rotation will look imo</span></li></ul></li></ul><p>&nbsp;</p><h3><a name="rotating-right" class="md-header-anchor"></a><span>Rotating Right</span></h3><ul><li><span>Left node becomes new parent node</span></li></ul><pre spellcheck="false" class="md-fences md-end-block ty-contain-cm modeLoaded" lang="pseudocode"><div class="CodeMirror cm-s-inner CodeMirror-wrap" lang="pseudocode"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 0px; left: 4.16663px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">rotate_right</span><span class="cm-bracket">(</span><span class="cm-variable">root</span><span class="cm-bracket">):</span></span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-variable">newRoot</span> <span class="cm-operator">=</span> <span class="cm-variable">root</span><span class="cm-operator">-&gt;</span><span class="cm-variable">left</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-variable">root</span><span class="cm-operator">-&gt;</span><span class="cm-variable">left</span> <span class="cm-operator">=</span> <span class="cm-variable">newRoot</span><span class="cm-operator">-&gt;</span><span class="cm-variable">right</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-variable">newRoot</span><span class="cm-operator">-&gt;</span><span class="cm-variable">right</span> <span class="cm-operator">=</span> <span class="cm-variable">root</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-keyword">return</span> <span class="cm-variable">newRoot</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 108px;"></div><div class="CodeMirror-gutters" style="display: none; height: 108px;"></div></div></div></pre><ul><li><span>If you are keeping track of height, need to readjust heights</span></li></ul><p>&nbsp;</p><h3><a name="rotating-left" class="md-header-anchor"></a><span>Rotating Left</span></h3><ul><li><span>Right node becomes new parent node</span></li></ul><pre spellcheck="false" class="md-fences md-end-block ty-contain-cm modeLoaded" lang="pseudocode"><div class="CodeMirror cm-s-inner CodeMirror-wrap" lang="pseudocode"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 0px; left: 4.16663px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">rotate_left</span><span class="cm-bracket">(</span><span class="cm-variable">root</span><span class="cm-bracket">):</span></span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-variable">newRoot</span> <span class="cm-operator">=</span> <span class="cm-variable">root</span><span class="cm-operator">-&gt;</span><span class="cm-variable">right</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-variable">root</span><span class="cm-operator">-&gt;</span><span class="cm-variable">right</span> <span class="cm-operator">=</span> <span class="cm-variable">newRoot</span><span class="cm-operator">-&gt;</span><span class="cm-variable">left</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-variable">newRoot</span><span class="cm-operator">-&gt;</span><span class="cm-variable">left</span> <span class="cm-operator">=</span> <span class="cm-variable">root</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-keyword">return</span> <span class="cm-variable">newRoot</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 108px;"></div><div class="CodeMirror-gutters" style="display: none; height: 108px;"></div></div></div></pre><p>&nbsp;</p><h2><a name="root-insertion" class="md-header-anchor"></a><span>Root Insertion</span></h2><ul><li><span>Puts recently inserted items close to root</span></li><li><span>Low search cost if most recently used items are accessed more often</span></li><li><span>Disadvantage - rearrangement of tree per insertion</span></li><li><span>Implementation:</span></li></ul><pre spellcheck="false" class="md-fences md-end-block ty-contain-cm modeLoaded" lang="pseudocode"><div class="CodeMirror cm-s-inner CodeMirror-wrap" lang="pseudocode"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 0px; left: 3.99738px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><span><span>\u200b</span>x</span></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-number">1</span>. <span class="cm-variable">Insert</span> <span class="cm-variable">node</span> <span class="cm-variable">normally</span></span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-number">2</span>. <span class="cm-keyword">If</span> <span class="cm-variable">curr</span> <span class="cm-variable">node</span> <span class="cm-keyword">is</span> <span class="cm-variable">left</span> <span class="cm-variable">child</span>, <span class="cm-variable">rotate</span> <span class="cm-variable">right</span> <span class="cm-keyword">and</span> <span class="cm-variable">vice</span> <span class="cm-variable">versa</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">\u200b</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Tree</span> <span class="cm-variable">insertAtRoot</span><span class="cm-bracket">(</span><span class="cm-variable">root</span>, <span class="cm-variable">newNode</span><span class="cm-bracket">):</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-keyword">if</span> <span class="cm-bracket">(</span><span class="cm-variable">root</span> <span class="cm-operator">==</span> <span class="cm-atom">NULL</span><span class="cm-bracket">)</span> <span class="cm-keyword">return</span> <span class="cm-variable">newNode</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">\u200b</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-variable">go</span> <span class="cm-variable">left</span> <span class="cm-keyword">if</span> <span class="cm-variable">newNode</span> <span class="cm-keyword">is</span> <span class="cm-variable">smaller</span><span class="cm-bracket">:</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-variable">root</span><span class="cm-operator">-&gt;</span><span class="cm-variable">left</span> <span class="cm-operator">=</span> <span class="cm-variable">insertAtRoot</span><span class="cm-bracket">(</span><span class="cm-variable">root</span><span class="cm-operator">-&gt;</span><span class="cm-variable">left</span>, <span class="cm-variable">newNode</span><span class="cm-bracket">)</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-variable">rotateRight</span><span class="cm-bracket">()</span> <span class="cm-doc">// Since we went down left subtree</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-variable">go</span> <span class="cm-variable">right</span> <span class="cm-keyword">if</span> <span class="cm-variable">newNode</span> <span class="cm-keyword">is</span> <span class="cm-variable">bigger</span><span class="cm-bracket">:</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-variable">insertAtRoot</span><span class="cm-bracket">(</span><span class="cm-variable">root</span><span class="cm-operator">-&gt;</span><span class="cm-variable">right</span>, <span class="cm-variable">newNode</span><span class="cm-bracket">)</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-variable">rotateLeft</span><span class="cm-bracket">()</span> <span class="cm-doc">// Since we went down left subtree</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 260px;"></div><div class="CodeMirror-gutters" style="display: none; height: 260px;"></div></div></div></pre><p><img src="Tree04 - Balancing Binary Search Trees.assets/image-20200324113923266.png" referrerpolicy="no-referrer" alt="image-20200324113923266"></p><ul><li><span>Time complexity O(h)</span></li><li><span>Tends to be balanced but no guarantee</span></li><li><span>Can also move searched for items to root instead of just inserted items (slight self balancing and makes search for commonly searched items better)</span></li></ul><p>&nbsp;</p><h2><a name="partitioning" class="md-header-anchor"></a><span>Partitioning</span></h2><ul><li><p><span>Rearranges the tree so that the i&#39;th node is root node</span></p><ul><li><span>where i is the index of the tree (imaginary though, we don&#39;t store index)</span></li></ul></li></ul><p><img src="Tree04 - Balancing Binary Search Trees.assets/image-20200324121820439.png" referrerpolicy="no-referrer" alt="image-20200324121820439"></p><ul><li><p><span>Basically:</span></p><ul><li><ol start=\'\' ><li><span>Find i&#39;th node</span></li><li><span>Rotate it to root</span></li></ol></li></ul></li><li><p><span>Assign index = 0 to n-1, in order from smallest to largest</span></p></li><li><p><span>To find the i&#39;th node, we need to know the number of nodes in each subtree</span></p><ul><li><p><span>e.g. M-&gt;left has 6 nodes, M-&gt;right has 4 nodes </span></p><ul><li><span>set </span><code>m = 6 nodes</code></li></ul></li><li><p><span>If we want i=5, we know it&#39;s on the left (</span><code>i &lt; m</code><span>), so it must be in the left tree</span></p></li><li><p><span>If we want i=6, we know it&#39;s the root node (</span><code>i == m</code><span>), we don&#39;t need to do anything</span></p></li><li><p><span>If we want i=7, we know it&#39;s in the right (</span><code>i &gt; m</code><span>)</span></p><ul><li><p><span>We go right with </span><code>i-m-1 = 0</code><span> </span></p><ul><li><span>At Q, we see that i=0 &lt; m, so we go left</span></li><li><span>At P, we see </span><code>i=0 == m=0 (since left node is empty)</code></li></ul></li></ul></li></ul></li></ul><pre spellcheck="false" class="md-fences md-end-block ty-contain-cm modeLoaded" lang="pseudocode"><div class="CodeMirror cm-s-inner CodeMirror-wrap" lang="pseudocode"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 0px; left: 4.16663px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">partition</span><span class="cm-bracket">(</span><span class="cm-variable">tree</span>, <span class="cm-variable">i</span><span class="cm-bracket">):</span></span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-variable">m</span> <span class="cm-operator">=</span> <span class="cm-variable">size</span><span class="cm-bracket">(</span><span class="cm-variable">tree</span><span class="cm-operator">-&gt;</span><span class="cm-variable">left</span><span class="cm-bracket">)</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-keyword">if</span> <span class="cm-bracket">(</span><span class="cm-variable">i</span> <span class="cm-operator">&lt;</span> <span class="cm-variable">m</span><span class="cm-bracket">):</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-variable">tree</span><span class="cm-operator">-&gt;</span><span class="cm-variable">left</span> <span class="cm-operator">=</span> <span class="cm-variable">partition</span><span class="cm-bracket">(</span><span class="cm-variable">tree</span><span class="cm-operator">-&gt;</span><span class="cm-variable">left</span>, <span class="cm-variable">i</span><span class="cm-bracket">)</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-variable">tree</span> <span class="cm-operator">=</span> <span class="cm-variable">rotateRight</span><span class="cm-bracket">(</span><span class="cm-variable">tree</span><span class="cm-bracket">)</span> &nbsp;<span class="cm-doc">// Need to rotate the i\'th node up to root</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-keyword">if</span> <span class="cm-bracket">(</span><span class="cm-variable">i</span> <span class="cm-operator">&gt;</span> <span class="cm-variable">m</span><span class="cm-bracket">):</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-variable">tree</span><span class="cm-operator">-&gt;</span><span class="cm-variable">right</span> <span class="cm-operator">=</span> <span class="cm-variable">partition</span><span class="cm-bracket">(</span><span class="cm-variable">tree</span><span class="cm-operator">-&gt;</span><span class="cm-variable">right</span>, <span class="cm-variable">i</span> <span class="cm-operator">-</span> <span class="cm-variable">m</span> <span class="cm-operator">-</span> <span class="cm-number">1</span><span class="cm-bracket">)</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">\u200b</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; <span class="cm-variable">tree</span> <span class="cm-operator">=</span> <span class="cm-variable">rotateLeft</span><span class="cm-bracket">(</span><span class="cm-variable">tree</span><span class="cm-bracket">)</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" class="cm-tab-wrap-hack" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-tab" role="presentation" cm-text="\t">    </span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-keyword">return</span> <span class="cm-variable">Tree</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 238px;"></div><div class="CodeMirror-gutters" style="display: none; height: 238px;"></div></div></div></pre><ul><li><p><span>Note, i-m-1 since we</span></p><ul><li><span>Remove all the root-&gt;left nodes as a possibility == m</span></li><li><span>Remove the root node == 1</span></li><li><span>Only consider what&#39;s left over</span></li></ul></li><li><p><span>We get </span><code>i - m - 1</code></p></li></ul><p>&nbsp;</p><h2><a name="rebalancing-trees" class="md-header-anchor"></a><span>Rebalancing Trees</span></h2><pre spellcheck="false" class="md-fences md-end-block ty-contain-cm modeLoaded" lang="pseudocode"><div class="CodeMirror cm-s-inner CodeMirror-wrap" lang="pseudocode"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 0px; left: 4.16663px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Rebalance</span><span class="cm-bracket">(</span><span class="cm-variable">tree</span><span class="cm-bracket">):</span></span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-keyword">if</span> <span class="cm-bracket">(</span><span class="cm-variable">size</span><span class="cm-bracket">(</span><span class="cm-variable">tree</span><span class="cm-bracket">)</span> <span class="cm-operator">&gt;=</span> <span class="cm-number">3</span><span class="cm-bracket">):</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-variable">t</span> <span class="cm-operator">=</span> <span class="cm-variable">partition</span><span class="cm-bracket">(</span><span class="cm-variable">t</span>, <span class="cm-variable">n</span>/2<span class="cm-bracket">)</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-variable">tree</span><span class="cm-operator">-&gt;</span><span class="cm-variable">left</span> <span class="cm-operator">=</span> <span class="cm-variable">rebalance</span><span class="cm-bracket">(</span><span class="cm-variable">tree</span><span class="cm-operator">-&gt;</span><span class="cm-variable">left</span><span class="cm-bracket">)</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-variable">tree</span><span class="cm-operator">-&gt;</span><span class="cm-variable">right</span> <span class="cm-operator">=</span> <span class="cm-variable">rebalance</span><span class="cm-bracket">(</span><span class="cm-variable">tree</span><span class="cm-operator">-&gt;</span><span class="cm-variable">right</span><span class="cm-bracket">)</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" class="cm-tab-wrap-hack" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-tab" role="presentation" cm-text="\t">    </span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="\t">    </span><span class="cm-keyword">return</span> <span class="cm-variable">t</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 152px;"></div><div class="CodeMirror-gutters" style="display: none; height: 152px;"></div></div></div></pre><ul><li><span>If the tree is only 1-2 nodes, it is balanced</span></li></ul><ol start=\'\' ><li><span>Make the middle index node the new root node (making the root node perfectly balanced)</span></li><li><span>Repeat for the left side (make root-&gt;left balanced, then root-&gt;left-&gt;left etc.)</span></li><li><span>Repeat for the right side</span></li></ol><ul><li><span>Basically constantly taking the middle index and setting it to the root node repeatedly</span></li></ul><p>&nbsp;</p><p>&nbsp;</p></div>\n</body>\n</html>'},229:function(n,e,t){"use strict";t.r(e);var r=t(0),a=t.n(r),o=t(13),i=t.n(o);t(29),Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var s=t(14),l=t(15),p=t(22),c=t(16),d=t(23),m=t(18),b=t(5);function g(){return a.a.createElement("h2",null,"Not Found")}t(30),t(31);var h=t(21),f=(t(32),t(33),t(17)),u=t.n(f),v=50;function x(n){var e=Object(r.useState)(""),t=Object(h.a)(e,2),o=t[0],i=t[1];return Object(r.useEffect)((function(){var e,t=0;return function r(){i((t++,u.a.highlight("javascript",n.message.substring(0,t)).value)),e=setTimeout(r,v)}(),function(){clearTimeout(e)}}),[n.message]),a.a.createElement("div",{id:"mainPageCode"},a.a.createElement("pre",null,a.a.createElement("code",{dangerouslySetInnerHTML:{__html:o}})))}function w(){return a.a.createElement("div",{id:"first_page"},a.a.createElement("div",{id:"myNameParent"},a.a.createElement("div",{id:"myName"}," Toshi Tabata ")),a.a.createElement(x,{message:'import React, {useEffect, useState} from "react";\nimport "../styles/darcula.css";\nimport "../style/typewriter.css"\nimport Highlight from "./highlight";\n\nconst typingSpeed = 100;\nexport default function TypeWriter(props) {\n    const [state, setState] = useState("");\n    // Start typeWriter loop\n    useEffect(() => {\n            let timer:any = "";\n            function startTyping() {\n                setState(currState => (\n                    getCurrText(currState)\n                ));\n                timer = setTimeout(startTyping, typingSpeed)\n            }\n            startTyping();\n            return () => clearTimeout(timer);\n        }, []\n    );\n\n    function getCurrText(state) {\n        return props.message.substring(0, state.length + 1);\n    }\n    return(\n        <div>\n            <pre>{state}</pre>\n        </div>\n    );\n}'}))}t(220);function y(){return a.a.createElement("div",{id:"second_page"},"My Projects (this is a HUGE work in progress):",a.a.createElement("div",null,"Videos:",a.a.createElement("br",null),"Video call with a 2D UWP app on the HoloLens",a.a.createElement("br",null),a.a.createElement("p",{style:{marginLeft:"50px",marginRight:"50px"}},"https://www.youtube.com/watch?v=1ik82w6xcN0"),a.a.createElement("br",null),"HoloLense Map Pathing",a.a.createElement("p",{style:{marginLeft:"50px",marginRight:"50px"}},"https://www.youtube.com/watch?v=naWj402wGYU"),a.a.createElement("br",null),"HoloLens Map Rotation",a.a.createElement("p",{style:{marginLeft:"50px",marginRight:"50px"}},"https://www.youtube.com/watch?v=BM58lvFIOI4")),a.a.createElement("a",{href:"https://toshi-tabata.github.io/draw/"},a.a.createElement("button",null,"Apple Pencil Drawing")),a.a.createElement("a",{href:"https://toshi-tabata.github.io/feirreact/"},a.a.createElement("button",null,"Fire Engineering Inspection Report Editor")),a.a.createElement("a",{href:"https://toshi-tabata.github.io/FEIR_screen_record/FEIR/table"},a.a.createElement("button",null,"Screen Recording")),a.a.createElement("a",{href:"https://github.com/Toshi-Tabata/COMP2521_ass1"},a.a.createElement("button",null,"Information Retrieval and Search (broken link until assignment deadline is over)")),a.a.createElement("a",{href:"https://github.com/Toshi-Tabata/Binary-search-tree-operations"},a.a.createElement("button",null,"Binary Search Tree Implementations in C")),a.a.createElement("a",{href:"https://github.com/Toshi-Tabata/pokedex"},a.a.createElement("button",null,"Pokedex in C")),a.a.createElement("a",{href:"https://github.com/Toshi-Tabata/switchSoundDevice"},a.a.createElement("button",null,"Keyboard Shortcut for Switching Sound Devices")),a.a.createElement("a",{href:"https://github.com/Toshi-Tabata/pokedex"},a.a.createElement("button",null,"Pokedex in C")))}t(221);function k(){return a.a.createElement("div",{id:"third_page"},"Third Pepage")}var C=function(){return a.a.createElement("div",{id:"pages"},a.a.createElement(w,null),a.a.createElement(y,null),a.a.createElement(k,null))};t(222),t(223);function M(){return a.a.createElement("div",{id:"foobar"},a.a.createElement("iframe",{src:"https://www.google.com/",height:1e3,width:1e3}," "))}var z=function(n){function e(){return Object(s.a)(this,e),Object(p.a)(this,Object(c.a)(e).apply(this,arguments))}return Object(d.a)(e,n),Object(l.a)(e,[{key:"render",value:function(){return a.a.createElement(m.a,{basename:""},a.a.createElement(b.d,null,a.a.createElement(b.b,{exact:!0,path:"/",component:C}),a.a.createElement(b.b,{path:"/404",component:g}),a.a.createElement(b.b,{path:"/hi",component:k}),a.a.createElement(b.b,{path:"/ho",component:k}),a.a.createElement(b.b,{path:"/hop/",component:k}),a.a.createElement(b.b,{path:"/home/hu",component:k}),a.a.createElement(b.b,{path:"/notes",component:M}),a.a.createElement(b.a,{to:"/404"})))}}]),e}(r.Component);i.a.render(a.a.createElement(z,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(n){n.unregister()}))},24:function(n,e,t){n.exports=t(229)},29:function(n,e,t){},30:function(n,e,t){},31:function(n,e,t){},32:function(n,e,t){},33:function(n,e,t){}},[[24,1,2]]]);
//# sourceMappingURL=main.055503fb.chunk.js.map