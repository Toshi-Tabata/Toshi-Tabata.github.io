{"version":3,"sources":["html/Tree04 - Balancing Binary Search Trees.html.js","serviceWorker.ts","views/notFound.tsx","components/HighlightCode.tsx","components/first_page.tsx","components/second_page.tsx","components/third_page.tsx","views/ResumePage.tsx","components/notes.tsx","router.tsx","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","NotFound","typingSpeed","TypeWriter","props","useState","state","setState","useEffect","timer","curr","startTyping","hljs","highlight","message","substring","value","setTimeout","clearTimeout","id","dangerouslySetInnerHTML","__html","FirstPage","SecondPage","style","marginLeft","marginRight","href","ThirdPage","ResumePage","require","NotesPage","src","height","width","WebsiteRouter","basename","process","exact","path","component","third_page","to","Component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yKAAAA,EAAOC,QAAP,i1hE,mFCYoBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,2DChBS,SAASC,IACpB,OACI,yC,uDCCFC,EAAc,GACL,SAASC,EAAWC,GAAO,MAEZC,mBAAS,IAFG,mBAE/BC,EAF+B,KAExBC,EAFwB,KA6BtC,OAvBAC,qBAAU,WAEF,IACIC,EADAC,EAAO,EAaX,OANA,SAASC,IACLJ,GALAG,IAEOE,IAAKC,UAAU,aAAcT,EAAMU,QAAQC,UAAU,EAAGL,IAAOM,QAItEP,EAAQQ,WAAWN,EAAaT,GAEpCS,GAEO,WAAOO,aAAaT,MAI5B,CAACL,EAAMU,UAKV,yBAAKK,GAAI,gBACL,6BAAK,0BAAMC,wBAAyB,CAACC,OAAQf,OCjC1C,SAASgB,IACpB,OACI,yBAAKH,GAAI,cACL,yBAAKA,GAAI,gBACL,yBAAKA,GAAI,UAAT,mBAEJ,kBAAChB,EAAD,CAAYW,QAAO,42B,OCDhB,SAASS,IAEpB,OACI,yBAAKJ,GAAI,eAAT,iDAEI,uCAEI,6BAFJ,+CAII,6BACA,uBAAGK,MAAO,CAACC,WAAW,OAAQC,YAAY,SAA1C,+CAIA,6BATJ,wBAWI,uBAAGF,MAAO,CAACC,WAAW,OAAQC,YAAY,SAA1C,+CAKA,6BAhBJ,wBAkBI,uBAAGF,MAAO,CAACC,WAAW,OAAQC,YAAY,SAA1C,gDAMJ,uBAAGC,KAAK,wCACJ,yDAGJ,uBAAGA,KAAK,6CACJ,8EAEH,uBAAGA,KAAK,gEACL,qDAEH,uBAAGA,KAAK,iDACL,qHAEJ,uBAAGA,KAAK,iEACJ,4EAEH,uBAAGA,KAAK,2CACL,iDAEJ,uBAAGA,KAAK,qDACJ,kFAGJ,uBAAGA,KAAK,2CACJ,kD,OC3DD,SAASC,IACpB,OACI,yBAAKT,GAAI,cAAT,gBCCR,IAYeU,EAZc,WACzB,OACI,yBAAKV,GAAI,SACL,kBAACG,EAAD,MACA,kBAACC,EAAD,MACA,kBAACK,EAAD,Q,OCNCE,EAAQ,KAGN,SAASC,IAEpB,OACI,yBAAKZ,GAAI,UACL,4BAAQa,IAAK,0BAA2BC,OAAQ,IAAMC,MAAO,KAA7D,M,ICLSC,E,iLAEb,OACI,kBAAC,IAAD,CAAQC,SAAUC,IACd,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAQ,IAAKC,UAAWX,IACrC,kBAAC,IAAD,CAAOU,KAAM,OAAQC,UAAWvC,IAChC,kBAAC,IAAD,CAAOsC,KAA+B,MAAOC,UAAWC,IACxD,kBAAC,IAAD,CAAOF,KAAM,MAAOC,UAAWC,IAC/B,kBAAC,IAAD,CAAOF,KAAM,QAASC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAM,WAAYC,UAAWC,IACpC,kBAAC,IAAD,CAAOF,KAAM,SAAUC,UAAWT,IAClC,kBAAC,IAAD,CAAUW,GAAI,e,GAZSC,aCA3CC,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,SToIpD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.055503fb.chunk.js","sourcesContent":["module.exports = `<!doctype html>\r\n<html style='font-size:14px !important'>\r\n<head>\r\n<meta charset='UTF-8'><meta name='viewport' content='width=device-width initial-scale=1'>\r\n<title>Tree04 - Balancing Binary Search Trees</title><style type='text/css'>html {overflow-x: initial !important;}:root { --bg-color:#ffffff; --text-color:#333333; --select-text-bg-color:#B5D6FC; --select-text-font-color:auto; --monospace:\"Lucida Console\",Consolas,\"Courier\",monospace; }\r\nhtml { font-size: 14px; background-color: var(--bg-color); color: var(--text-color); font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; }\r\nbody { margin: 0px; padding: 0px; height: auto; bottom: 0px; top: 0px; left: 0px; right: 0px; font-size: 1rem; line-height: 1.42857; overflow-x: hidden; background: inherit; tab-size: 4; }\r\niframe { margin: auto; }\r\na.url { word-break: break-all; }\r\na:active, a:hover { outline: 0px; }\r\n.in-text-selection, ::selection { text-shadow: none; background: var(--select-text-bg-color); color: var(--select-text-font-color); }\r\n#write { margin: 0px auto; height: auto; width: inherit; word-break: normal; overflow-wrap: break-word; position: relative; white-space: normal; overflow-x: visible; padding-top: 40px; }\r\n#write.first-line-indent p { text-indent: 2em; }\r\n#write.first-line-indent li p, #write.first-line-indent p * { text-indent: 0px; }\r\n#write.first-line-indent li { margin-left: 2em; }\r\n.for-image #write { padding-left: 8px; padding-right: 8px; }\r\nbody.typora-export { padding-left: 30px; padding-right: 30px; }\r\n.typora-export .footnote-line, .typora-export li, .typora-export p { white-space: pre-wrap; }\r\n@media screen and (max-width: 500px) {\r\n  body.typora-export { padding-left: 0px; padding-right: 0px; }\r\n  #write { padding-left: 20px; padding-right: 20px; }\r\n  .CodeMirror-sizer { margin-left: 0px !important; }\r\n  .CodeMirror-gutters { display: none !important; }\r\n}\r\n#write li > figure:last-child { margin-bottom: 0.5rem; }\r\n#write ol, #write ul { position: relative; }\r\nimg { max-width: 100%; vertical-align: middle; }\r\nbutton, input, select, textarea { color: inherit; font: inherit; }\r\ninput[type=\"checkbox\"], input[type=\"radio\"] { line-height: normal; padding: 0px; }\r\n*, ::after, ::before { box-sizing: border-box; }\r\n#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p, #write pre { width: inherit; }\r\n#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p { position: relative; }\r\np { line-height: inherit; }\r\nh1, h2, h3, h4, h5, h6 { break-after: avoid-page; break-inside: avoid; orphans: 2; }\r\np { orphans: 4; }\r\nh1 { font-size: 2rem; }\r\nh2 { font-size: 1.8rem; }\r\nh3 { font-size: 1.6rem; }\r\nh4 { font-size: 1.4rem; }\r\nh5 { font-size: 1.2rem; }\r\nh6 { font-size: 1rem; }\r\n.md-math-block, .md-rawblock, h1, h2, h3, h4, h5, h6, p { margin-top: 1rem; margin-bottom: 1rem; }\r\n.hidden { display: none; }\r\n.md-blockmeta { color: rgb(204, 204, 204); font-weight: 700; font-style: italic; }\r\na { cursor: pointer; }\r\nsup.md-footnote { padding: 2px 4px; background-color: rgba(238, 238, 238, 0.7); color: rgb(85, 85, 85); border-radius: 4px; cursor: pointer; }\r\nsup.md-footnote a, sup.md-footnote a:hover { color: inherit; text-transform: inherit; text-decoration: inherit; }\r\n#write input[type=\"checkbox\"] { cursor: pointer; width: inherit; height: inherit; }\r\nfigure { overflow-x: auto; margin: 1.2em 0px; max-width: calc(100% + 16px); padding: 0px; }\r\nfigure > table { margin: 0px !important; }\r\ntr { break-inside: avoid; break-after: auto; }\r\nthead { display: table-header-group; }\r\ntable { border-collapse: collapse; border-spacing: 0px; width: 100%; overflow: auto; break-inside: auto; text-align: left; }\r\ntable.md-table td { min-width: 32px; }\r\n.CodeMirror-gutters { border-right: 0px; background-color: inherit; }\r\n.CodeMirror-linenumber { user-select: none; }\r\n.CodeMirror { text-align: left; }\r\n.CodeMirror-placeholder { opacity: 0.3; }\r\n.CodeMirror pre { padding: 0px 4px; }\r\n.CodeMirror-lines { padding: 0px; }\r\ndiv.hr:focus { cursor: none; }\r\n#write pre { white-space: pre-wrap; }\r\n#write.fences-no-line-wrapping pre { white-space: pre; }\r\n#write pre.ty-contain-cm { white-space: normal; }\r\n.CodeMirror-gutters { margin-right: 4px; }\r\n.md-fences { font-size: 0.9rem; display: block; break-inside: avoid; text-align: left; overflow: visible; white-space: pre; background: inherit; position: relative !important; }\r\n.md-diagram-panel { width: 100%; margin-top: 10px; text-align: center; padding-top: 0px; padding-bottom: 8px; overflow-x: auto; }\r\n#write .md-fences.mock-cm { white-space: pre-wrap; }\r\n.md-fences.md-fences-with-lineno { padding-left: 0px; }\r\n#write.fences-no-line-wrapping .md-fences.mock-cm { white-space: pre; overflow-x: auto; }\r\n.md-fences.mock-cm.md-fences-with-lineno { padding-left: 8px; }\r\n.CodeMirror-line, twitterwidget { break-inside: avoid; }\r\n.footnotes { opacity: 0.8; font-size: 0.9rem; margin-top: 1em; margin-bottom: 1em; }\r\n.footnotes + .footnotes { margin-top: 0px; }\r\n.md-reset { margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: top; background: 0px 0px; text-decoration: none; text-shadow: none; float: none; position: static; width: auto; height: auto; white-space: nowrap; cursor: inherit; -webkit-tap-highlight-color: transparent; line-height: normal; font-weight: 400; text-align: left; box-sizing: content-box; direction: ltr; }\r\nli div { padding-top: 0px; }\r\nblockquote { margin: 1rem 0px; }\r\nli .mathjax-block, li p { margin: 0.5rem 0px; }\r\nli { margin: 0px; position: relative; }\r\nblockquote > :last-child { margin-bottom: 0px; }\r\nblockquote > :first-child, li > :first-child { margin-top: 0px; }\r\n.footnotes-area { color: rgb(136, 136, 136); margin-top: 0.714rem; padding-bottom: 0.143rem; white-space: normal; }\r\n#write .footnote-line { white-space: pre-wrap; }\r\n@media print {\r\n  body, html { border: 1px solid transparent; height: 99%; break-after: avoid; break-before: avoid; }\r\n  #write { margin-top: 0px; padding-top: 0px; border-color: transparent !important; }\r\n  .typora-export * { -webkit-print-color-adjust: exact; }\r\n  html.blink-to-pdf { font-size: 13px; }\r\n  .typora-export #write { padding-left: 32px; padding-right: 32px; padding-bottom: 0px; break-after: avoid; }\r\n  .typora-export #write::after { height: 0px; }\r\n}\r\n.footnote-line { margin-top: 0.714em; font-size: 0.7em; }\r\na img, img a { cursor: pointer; }\r\npre.md-meta-block { font-size: 0.8rem; min-height: 0.8rem; white-space: pre-wrap; background: rgb(204, 204, 204); display: block; overflow-x: hidden; }\r\np > .md-image:only-child:not(.md-img-error) img, p > img:only-child { display: block; margin: auto; }\r\np > .md-image:only-child { display: inline-block; width: 100%; }\r\n#write .MathJax_Display { margin: 0.8em 0px 0px; }\r\n.md-math-block { width: 100%; }\r\n.md-math-block:not(:empty)::after { display: none; }\r\n[contenteditable=\"true\"]:active, [contenteditable=\"true\"]:focus, [contenteditable=\"false\"]:active, [contenteditable=\"false\"]:focus { outline: 0px; box-shadow: none; }\r\n.md-task-list-item { position: relative; list-style-type: none; }\r\n.task-list-item.md-task-list-item { padding-left: 0px; }\r\n.md-task-list-item > input { position: absolute; top: 0px; left: 0px; margin-left: -1.2em; margin-top: calc(1em - 10px); border: none; }\r\n.math { font-size: 1rem; }\r\n.md-toc { min-height: 3.58rem; position: relative; font-size: 0.9rem; border-radius: 10px; }\r\n.md-toc-content { position: relative; margin-left: 0px; }\r\n.md-toc-content::after, .md-toc::after { display: none; }\r\n.md-toc-item { display: block; color: rgb(65, 131, 196); }\r\n.md-toc-item a { text-decoration: none; }\r\n.md-toc-inner:hover { text-decoration: underline; }\r\n.md-toc-inner { display: inline-block; cursor: pointer; }\r\n.md-toc-h1 .md-toc-inner { margin-left: 0px; font-weight: 700; }\r\n.md-toc-h2 .md-toc-inner { margin-left: 2em; }\r\n.md-toc-h3 .md-toc-inner { margin-left: 4em; }\r\n.md-toc-h4 .md-toc-inner { margin-left: 6em; }\r\n.md-toc-h5 .md-toc-inner { margin-left: 8em; }\r\n.md-toc-h6 .md-toc-inner { margin-left: 10em; }\r\n@media screen and (max-width: 48em) {\r\n  .md-toc-h3 .md-toc-inner { margin-left: 3.5em; }\r\n  .md-toc-h4 .md-toc-inner { margin-left: 5em; }\r\n  .md-toc-h5 .md-toc-inner { margin-left: 6.5em; }\r\n  .md-toc-h6 .md-toc-inner { margin-left: 8em; }\r\n}\r\na.md-toc-inner { font-size: inherit; font-style: inherit; font-weight: inherit; line-height: inherit; }\r\n.footnote-line a:not(.reversefootnote) { color: inherit; }\r\n.md-attr { display: none; }\r\n.md-fn-count::after { content: \".\"; }\r\ncode, pre, samp, tt { font-family: var(--monospace); }\r\nkbd { margin: 0px 0.1em; padding: 0.1em 0.6em; font-size: 0.8em; color: rgb(36, 39, 41); background: rgb(255, 255, 255); border: 1px solid rgb(173, 179, 185); border-radius: 3px; box-shadow: rgba(12, 13, 14, 0.2) 0px 1px 0px, rgb(255, 255, 255) 0px 0px 0px 2px inset; white-space: nowrap; vertical-align: middle; }\r\n.md-comment { color: rgb(162, 127, 3); opacity: 0.8; font-family: var(--monospace); }\r\ncode { text-align: left; vertical-align: initial; }\r\na.md-print-anchor { white-space: pre !important; border-width: initial !important; border-style: none !important; border-color: initial !important; display: inline-block !important; position: absolute !important; width: 1px !important; right: 0px !important; outline: 0px !important; background: 0px 0px !important; text-decoration: initial !important; text-shadow: initial !important; }\r\n.md-inline-math .MathJax_SVG .noError { display: none !important; }\r\n.html-for-mac .inline-math-svg .MathJax_SVG { vertical-align: 0.2px; }\r\n.md-math-block .MathJax_SVG_Display { text-align: center; margin: 0px; position: relative; text-indent: 0px; max-width: none; max-height: none; min-height: 0px; min-width: 100%; width: auto; overflow-y: hidden; display: block !important; }\r\n.MathJax_SVG_Display, .md-inline-math .MathJax_SVG_Display { width: auto; margin: inherit; display: inline-block !important; }\r\n.MathJax_SVG .MJX-monospace { font-family: var(--monospace); }\r\n.MathJax_SVG .MJX-sans-serif { font-family: sans-serif; }\r\n.MathJax_SVG { display: inline; font-style: normal; font-weight: 400; line-height: normal; zoom: 90%; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; }\r\n.MathJax_SVG * { transition: none 0s ease 0s; }\r\n.MathJax_SVG_Display svg { vertical-align: middle !important; margin-bottom: 0px !important; margin-top: 0px !important; }\r\n.os-windows.monocolor-emoji .md-emoji { font-family: \"Segoe UI Symbol\", sans-serif; }\r\n.md-diagram-panel > svg { max-width: 100%; }\r\n[lang=\"flow\"] svg, [lang=\"mermaid\"] svg { max-width: 100%; height: auto; }\r\n[lang=\"mermaid\"] .node text { font-size: 1rem; }\r\ntable tr th { border-bottom: 0px; }\r\nvideo { max-width: 100%; display: block; margin: 0px auto; }\r\niframe { max-width: 100%; width: 100%; border: none; }\r\n.highlight td, .highlight tr { border: 0px; }\r\nsvg[id^=\"mermaidChart\"] { line-height: 1em; }\r\nmark { background: rgb(255, 255, 0); color: rgb(0, 0, 0); }\r\n.md-html-inline .md-plain, .md-html-inline strong, mark .md-inline-math, mark strong { color: inherit; }\r\nmark .md-meta { color: rgb(0, 0, 0); opacity: 0.3 !important; }\r\n\r\n\r\n.CodeMirror { height: auto; }\r\n.CodeMirror.cm-s-inner { background: inherit; }\r\n.CodeMirror-scroll { overflow: auto hidden; z-index: 3; }\r\n.CodeMirror-gutter-filler, .CodeMirror-scrollbar-filler { background-color: rgb(255, 255, 255); }\r\n.CodeMirror-gutters { border-right: 1px solid rgb(221, 221, 221); background: inherit; white-space: nowrap; }\r\n.CodeMirror-linenumber { padding: 0px 3px 0px 5px; text-align: right; color: rgb(153, 153, 153); }\r\n.cm-s-inner .cm-keyword { color: rgb(119, 0, 136); }\r\n.cm-s-inner .cm-atom, .cm-s-inner.cm-atom { color: rgb(34, 17, 153); }\r\n.cm-s-inner .cm-number { color: rgb(17, 102, 68); }\r\n.cm-s-inner .cm-def { color: rgb(0, 0, 255); }\r\n.cm-s-inner .cm-variable { color: rgb(0, 0, 0); }\r\n.cm-s-inner .cm-variable-2 { color: rgb(0, 85, 170); }\r\n.cm-s-inner .cm-variable-3 { color: rgb(0, 136, 85); }\r\n.cm-s-inner .cm-string { color: rgb(170, 17, 17); }\r\n.cm-s-inner .cm-property { color: rgb(0, 0, 0); }\r\n.cm-s-inner .cm-operator { color: rgb(152, 26, 26); }\r\n.cm-s-inner .cm-comment, .cm-s-inner.cm-comment { color: rgb(170, 85, 0); }\r\n.cm-s-inner .cm-string-2 { color: rgb(255, 85, 0); }\r\n.cm-s-inner .cm-meta { color: rgb(85, 85, 85); }\r\n.cm-s-inner .cm-qualifier { color: rgb(85, 85, 85); }\r\n.cm-s-inner .cm-builtin { color: rgb(51, 0, 170); }\r\n.cm-s-inner .cm-bracket { color: rgb(153, 153, 119); }\r\n.cm-s-inner .cm-tag { color: rgb(17, 119, 0); }\r\n.cm-s-inner .cm-attribute { color: rgb(0, 0, 204); }\r\n.cm-s-inner .cm-header, .cm-s-inner.cm-header { color: rgb(0, 0, 255); }\r\n.cm-s-inner .cm-quote, .cm-s-inner.cm-quote { color: rgb(0, 153, 0); }\r\n.cm-s-inner .cm-hr, .cm-s-inner.cm-hr { color: rgb(153, 153, 153); }\r\n.cm-s-inner .cm-link, .cm-s-inner.cm-link { color: rgb(0, 0, 204); }\r\n.cm-negative { color: rgb(221, 68, 68); }\r\n.cm-positive { color: rgb(34, 153, 34); }\r\n.cm-header, .cm-strong { font-weight: 700; }\r\n.cm-del { text-decoration: line-through; }\r\n.cm-em { font-style: italic; }\r\n.cm-link { text-decoration: underline; }\r\n.cm-error { color: red; }\r\n.cm-invalidchar { color: red; }\r\n.cm-constant { color: rgb(38, 139, 210); }\r\n.cm-defined { color: rgb(181, 137, 0); }\r\ndiv.CodeMirror span.CodeMirror-matchingbracket { color: rgb(0, 255, 0); }\r\ndiv.CodeMirror span.CodeMirror-nonmatchingbracket { color: rgb(255, 34, 34); }\r\n.cm-s-inner .CodeMirror-activeline-background { background: inherit; }\r\n.CodeMirror { position: relative; overflow: hidden; }\r\n.CodeMirror-scroll { height: 100%; outline: 0px; position: relative; box-sizing: content-box; background: inherit; }\r\n.CodeMirror-sizer { position: relative; }\r\n.CodeMirror-gutter-filler, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-vscrollbar { position: absolute; z-index: 6; display: none; }\r\n.CodeMirror-vscrollbar { right: 0px; top: 0px; overflow: hidden; }\r\n.CodeMirror-hscrollbar { bottom: 0px; left: 0px; overflow: hidden; }\r\n.CodeMirror-scrollbar-filler { right: 0px; bottom: 0px; }\r\n.CodeMirror-gutter-filler { left: 0px; bottom: 0px; }\r\n.CodeMirror-gutters { position: absolute; left: 0px; top: 0px; padding-bottom: 30px; z-index: 3; }\r\n.CodeMirror-gutter { white-space: normal; height: 100%; box-sizing: content-box; padding-bottom: 30px; margin-bottom: -32px; display: inline-block; }\r\n.CodeMirror-gutter-wrapper { position: absolute; z-index: 4; background: 0px 0px !important; border: none !important; }\r\n.CodeMirror-gutter-background { position: absolute; top: 0px; bottom: 0px; z-index: 4; }\r\n.CodeMirror-gutter-elt { position: absolute; cursor: default; z-index: 4; }\r\n.CodeMirror-lines { cursor: text; }\r\n.CodeMirror pre { border-radius: 0px; border-width: 0px; background: 0px 0px; font-family: inherit; font-size: inherit; margin: 0px; white-space: pre; overflow-wrap: normal; color: inherit; z-index: 2; position: relative; overflow: visible; }\r\n.CodeMirror-wrap pre { overflow-wrap: break-word; white-space: pre-wrap; word-break: normal; }\r\n.CodeMirror-code pre { border-right: 30px solid transparent; width: fit-content; }\r\n.CodeMirror-wrap .CodeMirror-code pre { border-right: none; width: auto; }\r\n.CodeMirror-linebackground { position: absolute; left: 0px; right: 0px; top: 0px; bottom: 0px; z-index: 0; }\r\n.CodeMirror-linewidget { position: relative; z-index: 2; overflow: auto; }\r\n.CodeMirror-wrap .CodeMirror-scroll { overflow-x: hidden; }\r\n.CodeMirror-measure { position: absolute; width: 100%; height: 0px; overflow: hidden; visibility: hidden; }\r\n.CodeMirror-measure pre { position: static; }\r\n.CodeMirror div.CodeMirror-cursor { position: absolute; visibility: hidden; border-right: none; width: 0px; }\r\n.CodeMirror div.CodeMirror-cursor { visibility: hidden; }\r\n.CodeMirror-focused div.CodeMirror-cursor { visibility: inherit; }\r\n.cm-searching { background: rgba(255, 255, 0, 0.4); }\r\n@media print {\r\n  .CodeMirror div.CodeMirror-cursor { visibility: hidden; }\r\n}\r\n\r\n\r\n/*\r\nBased off ursine-umbra\r\nMade by Toshi Tabata\r\n */\r\n\r\n/*\r\n    Name: IntelliJ IDEA darcula theme\r\n    From IntelliJ IDEA by JetBrains\r\n*/\r\n\r\n.cm-s-inner  { font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, serif;}\r\n.cm-s-inner.CodeMirror { background: #2B2B2B; color: #A9B7C6; }\r\n\r\n.cm-s-inner span.cm-meta { color: #BBB529; }\r\n.cm-s-inner span.cm-number { color: #6897BB; }\r\n.cm-s-inner span.cm-keyword { color: #CC7832; line-height: 1em; font-weight: bold; }\r\n.cm-s-inner span.cm-def { color: #A9B7C6; }\r\n.cm-s-inner span.cm-variable { color: #A9B7C6; }\r\n.cm-s-inner span.cm-variable-2 { color: #A9B7C6; }\r\n.cm-s-inner span.cm-variable-3 { color: #CC7832; }\r\n.cm-s-inner span.cm-type { color: #AABBCC; font-weight: bold; }\r\n.cm-s-inner span.cm-property { color: #CC7832; }\r\n.cm-s-inner span.cm-operator { color: #A9B7C6; }\r\n.cm-s-inner span.cm-string { color: #6A8759; }\r\n.cm-s-inner span.cm-string-2 { color: #6A8759; }\r\n.cm-s-inner span.cm-comment { color: #808080; font-style: italic; }\r\n\r\n.cm-s-inner span.cm-link { color: #CC7832; }\r\n.cm-s-inner span.cm-atom { color: #CC7832; }\r\n.cm-s-inner span.cm-error { color: #BC3F3C; }\r\n.cm-s-inner span.cm-tag { color: #FFC66D;}\r\n.cm-s-inner span.cm-attribute { color: #6897bb; }\r\n.cm-s-inner span.cm-qualifier { color: #6A8759; }\r\n.cm-s-inner span.cm-bracket { color: #FFC66D; }\r\n.cm-s-inner span.cm-builtin { color: #FF9E59; }\r\n.cm-s-inner span.cm-special { color: #FF9E59; }\r\n.cm-s-inner span.cm-matchhighlight { color: #FFFFFF; background-color: rgba(50, 89, 48, .7); font-weight: normal;}\r\n.cm-s-inner span.cm-searching { color: #FFFFFF; background-color: rgba(61, 115, 59, .7); font-weight: normal;}\r\n\r\n.cm-s-inner .CodeMirror-cursor { border-left: solid thin #f8f8f2 !important; }\r\n.cm-s-inner .CodeMirror-activeline-background { background: #323232; }\r\n.cm-s-inner .CodeMirror-gutters { background: #313335; border-right: 1px solid #313335; }\r\n.cm-s-inner .CodeMirror-guttermarker { color: #FFEE80; }\r\n.cm-s-inner .CodeMirror-guttermarker-subtle { color: #D0D0D0; }\r\n.cm-s-inner .CodeMirrir-linenumber { color: #606366; }\r\n.cm-s-inner .CodeMirror-matchingbracket { background-color: #3B514D; color: #FFEF28 !important; font-weight: bold; }\r\n\r\n.cm-s-inner .CodeMirror-selected, .cm-s-inner .CodeMirror-selectedtext {\r\n  background: #214283 !important;\r\n  color: inherit;\r\n  text-shadow: none;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n#fences-auto-suggest .active {\r\n  background: #3c3c3c;\r\n}\r\n\r\n#write .code-tooltip {\r\n  bottom: initial;\r\n  top: calc(100% - 1px);\r\n  background: #282a36;\r\n  border: 1px solid #3c3c3c;\r\n  border-top: 0;\r\n}\r\n\r\n.auto-suggest-container {\r\n  border-color: #5b5b5b;\r\n}\r\n\r\n.auto-suggest-container .autoComplt-hint.active {\r\n  background: #5b5b5b;\r\n  color: #fff;\r\n}\r\n\r\n:root {\r\n  --bg-color: #1e2022;\r\n  --text-color: #ddd;\r\n  --md-char-color: #5b5b5b;\r\n  --meta-content-color: #757575;\r\n  --table-border-color: #5b5b5b;\r\n  --primary-color: #428bca;\r\n  --primary-btn-border-color: #285e8e;\r\n  --primary-btn-text-color: #ddd;\r\n  --window-border: 1px solid #16161a;\r\n  --active-file-bg-color: #16161a;\r\n  --active-file-text-color: inherit;\r\n  --active-file-border-color: #757575;\r\n  --active-search-item-bg-color: #212121;\r\n  --side-bar-bg-color: #2b2b2b;\r\n  --item-hover-bg-color: #1e2022;\r\n  --item-hover-text-color: #fff;\r\n  --search-select-text-color: #ddd;\r\n  --search-select-bg-color: #428bca90;\r\n  --rawblock-edit-panel-bd: #3c3c3c;\r\n  --monospace: 'Cousine', 'Consolas', monospace;\r\n  --node-fill: #1e2022;\r\n  --node-border: #ffffff26;\r\n}\r\n\r\nhtml, body {\r\n  font-family: 'Avenir Next LT Pro', 'Lato', sans-serif;\r\n}\r\n\r\nbody {\r\n  font-size: 1em;\r\n}\r\n\r\nh1, h2, h3, h4, h5, h6 {\r\n  font-family: 'Adelle', 'Times New Roman', serif;\r\n}\r\n\r\np {\r\n  margin: .5rem 0;\r\n}\r\n\r\na {\r\n  color: #6bcafb;\r\n}\r\n\r\ndel {\r\n  color: #5b5b5b;\r\n}\r\n\r\nmark {\r\n  padding: 2px 1px;\r\n  background: #196186d0;\r\n  color: inherit;\r\n}\r\n\r\nblockquote {\r\n  position: relative;\r\n  margin: 1rem 0 1rem 2rem;\r\n  font-family: 'Adelle', 'Times New Roman', serif;\r\n}\r\n\r\nblockquote::before {\r\n  content: '';\r\n  position: absolute;\r\n  left: -2rem;\r\n  height: 100%;\r\n  width: .25rem;\r\n  background: #428bca;\r\n}\r\n\r\ncode,\r\n.md-fences,\r\ntt {\r\n  font-family: 'Cousine', 'Consolas', monospace;\r\n  font-size: 1rem;\r\n}\r\n\r\ncode {\r\n  font-size: .9em;\r\n  border: 1px solid #ffffff26;\r\n  border-radius: .25rem;\r\n  padding: 0 .125rem;\r\n  background: #0000001a;\r\n}\r\n\r\nhr {\r\n  border-color: #5b5b5b;\r\n}\r\n\r\ntable {\r\n  border: 1px solid #5b5b5b;\r\n  margin: 1rem 0;\r\n}\r\n\r\ntable tr:nth-child(2n) {\r\n  background: #3c3c3c;\r\n}\r\n\r\nthead {\r\n  background: #4d4d4d;\r\n}\r\n\r\ntd, th {\r\n  padding: .35rem .7rem;\r\n  border: 1px solid #5b5b5b;\r\n}\r\n\r\n#write {\r\n  position: static;\r\n  width: 90%;\r\n  max-width: 700px;\r\n  line-height: 1.6;\r\n  transform: none;\r\n}\r\n\r\n#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p, #write pre {\r\n  width: auto;\r\n}\r\n\r\n#write h1::before, #write h2::before, #write h3::before, #write h4::before, #write h5::before, #write h6::before {\r\n  position: absolute;\r\n  right: calc(100% + 10px);\r\n  bottom: 0;\r\n  color: #5b5b5b;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  font-variant: 'small-caps';\r\n  border: 0;\r\n  border-radius: 0;\r\n  left: auto;\r\n  float: none;\r\n  padding: 0;\r\n  vertical-align: baseline;\r\n  line-height: 20px;\r\n}\r\n\r\n#write h1 {\r\n  font-size: 1.8rem;\r\n  margin: 1rem 0;\r\n}\r\n\r\n#write h1::before {\r\n  content: '';\r\n  bottom: .45rem;\r\n}\r\n\r\n#write h2 {\r\n  font-size: 1.4rem;\r\n  margin: .7rem 0;\r\n}\r\n\r\n#write h2::before {\r\n  content: '';\r\n  bottom: .2rem;\r\n}\r\n\r\n#write h3 {\r\n  font-size: 1.2rem;\r\n  margin: .5rem 0;\r\n}\r\n\r\n#write h3::before {\r\n  content: '';\r\n  bottom: .18rem;\r\n}\r\n\r\n#write h4 {\r\n  font-size: 1.1rem;\r\n  margin: .2rem 0;\r\n}\r\n\r\n#write h4::before {\r\n  content: '';\r\n  bottom: .15rem;\r\n}\r\n\r\n#write h5, #write h6 {\r\n  font-size: 1rem;\r\n  margin: 0;\r\n}\r\n\r\n#write h5::before, #write h6::before {\r\n  bottom: .1rem;\r\n}\r\n\r\n#write h5::before {\r\n  content: '';\r\n}\r\n\r\n#write h6::before {\r\n  content: '';\r\n}\r\n\r\n#write ol, #write ul {\r\n  padding-left: 2rem;\r\n  margin: .5rem 0;\r\n}\r\n\r\n#write ol > li, #write ul > li {\r\n  color: #428bca;\r\n}\r\n\r\n#write ol > li > *, #write ul > li > * {\r\n  color: #ddd;\r\n}\r\n\r\n#write ol > li > *:not(ol):not(ul), #write ul > li > *:not(ol):not(ul) {\r\n  padding-left: .25rem;\r\n}\r\n\r\n#write ul {\r\n  list-style-type: disc;\r\n}\r\n\r\n#write .md-task-list-item > input {\r\n  -webkit-appearance: initial;\r\n  display: block;\r\n  position: absolute;\r\n  border: 1px solid #5b5b5b;\r\n  border-radius: .25rem;\r\n  margin-top: .1rem;\r\n  margin-left: -1.8rem;\r\n  height: 1.2rem;\r\n  width: 1.2rem;\r\n  transition: background 0.3s;\r\n}\r\n\r\n#write .md-task-list-item > input:focus {\r\n  outline: none;\r\n  box-shadow: none;\r\n}\r\n\r\n#write .md-task-list-item > input:hover {\r\n  background: #3c3c3c;\r\n}\r\n\r\n#write .md-task-list-item > input[checked]::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 20%;\r\n  left: 50%;\r\n  height: 60%;\r\n  width: 2px;\r\n  transform: rotate(40deg);\r\n  background: #ddd;\r\n}\r\n\r\n#write .md-task-list-item > input[checked]::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: 46%;\r\n  left: 25%;\r\n  height: 30%;\r\n  width: 2px;\r\n  transform: rotate(-40deg);\r\n  background: #ddd;\r\n}\r\n\r\n#write .md-task-list-item > p {\r\n  transition: color 0.3s;\r\n}\r\n\r\n#write .md-task-list-item.task-list-done > p {\r\n  color: #5b5b5b;\r\n  text-decoration: line-through;\r\n}\r\n\r\n#write .md-meta-block {\r\n  background-color: transparent;\r\n  border-bottom: 1px solid #5b5b5b;\r\n  padding-bottom: 1rem;\r\n  opacity: .8;\r\n}\r\n\r\n#write .md-table-edit {\r\n  border-top: 1px solid #5b5b5b;\r\n  margin-top: -29px !important;\r\n  padding: 3px 0;\r\n}\r\n\r\n#write .md-grid-board a.md-active, #write .md-grid-board a:hover {\r\n  background: #428bca;\r\n  color: #5b5b5b;\r\n}\r\n\r\n#write .md-grid-board tr[row='1'] a.md-active, #write .md-grid-board tr[row='1'] a:hover {\r\n  background: #285e8e;\r\n  color: #5b5b5b;\r\n}\r\n\r\n#write .btn-group .btn + .btn {\r\n  margin-left: 0;\r\n}\r\n\r\n#write .btn-default.active, #write .btn-default.focus, #write .btn-default:active, #write .btn-default:focus, #write .btn-default:hover,\r\n.open > #write .btn-default.dropdown-toggle {\r\n  background: transparent;\r\n  color: inherit;\r\n}\r\n\r\n#write .typora-table-drag-area::after {\r\n  content: '';\r\n  position: absolute;\r\n  border: 2px solid #ddd;\r\n  opacity: 0;\r\n  transition: opacity .4s;\r\n}\r\n\r\n#typora-table-row-tracker #write .typora-table-drag-area::after,\r\n#typora-table-col-tracker #write .typora-table-drag-area::after {\r\n  opacity: 1;\r\n}\r\n\r\n#typora-table-row-tracker #write .typora-table-drag-area::after {\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 0;\r\n  height: 100%;\r\n}\r\n\r\n#typora-table-col-tracker #write .typora-table-drag-area::after {\r\n  top: 50%;\r\n  left: 0;\r\n  transform: translateY(-50%);\r\n  width: 100%;\r\n  height: 0;\r\n}\r\n\r\n#write .md-toc-tooltip {\r\n  z-index: 10;\r\n}\r\n\r\n#write .md-toc-item {\r\n  font-size: 1.1rem;\r\n  color: var(--primary-btn-border-color);\r\n}\r\n\r\n#write .md-toc-h1 {\r\n  font-family: 'Adelle', 'Times New Roman', serif;\r\n  font-size: 1.3rem;\r\n}\r\n\r\n#write .md-toc-h2 {\r\n  font-size: 1.2rem;\r\n}\r\n\r\n#write .md-footnote {\r\n  font-family: 'Adelle', 'Times New Roman', serif;\r\n  font-size: .8em;\r\n  border: 1px solid #3c3c3c;\r\n  padding: 0 4px;\r\n  background: #111;\r\n  color: #ddd;\r\n}\r\n\r\n#write .md-def-split {\r\n  min-width: 1ch;\r\n}\r\n\r\n#write .md-def-name::before, #write .md-def-name::after {\r\n  color: #757575;\r\n}\r\n\r\n#write .md-image > .md-meta {\r\n  color: #757575;\r\n}\r\n\r\n#write .md-rawblock-tooltip {\r\n  top: -1.5rem;\r\n  height: 1.5rem;\r\n  padding: .25rem;\r\n}\r\n\r\n#write .md-search-hit {\r\n  background: #428bca40;\r\n  border-radius: .125rem;\r\n}\r\n\r\n#write .md-search-select {\r\n  background: #428bca90;\r\n  border: 1px solid #9292928f;\r\n  padding: 0 1px;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"] .md-diagram-panel {\r\n  border-color: #ffffff26;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"] tspan {\r\n  fill: #ddd;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"graph\"] path.path {\r\n  marker-end: url(\"file:///C://Users//super//AppData//Roaming//Typora/themes/#arrowhead\");\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .section1 {\r\n  fill: transparent;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .section2 {\r\n  fill: #3c3c3c;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .section3 {\r\n  fill: transparent;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .section4 {\r\n  fill: #3c3c3c;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .section5 {\r\n  fill: transparent;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .section6 {\r\n  fill: #3c3c3c;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .section7 {\r\n  fill: transparent;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .section8 {\r\n  fill: #3c3c3c;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .section9 {\r\n  fill: transparent;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .section10 {\r\n  fill: #3c3c3c;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .section11 {\r\n  fill: transparent;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .section12 {\r\n  fill: #3c3c3c;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .section13 {\r\n  fill: transparent;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .section14 {\r\n  fill: #3c3c3c;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .section15 {\r\n  fill: transparent;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .section16 {\r\n  fill: #3c3c3c;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .section17 {\r\n  fill: transparent;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .section18 {\r\n  fill: #3c3c3c;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .section19 {\r\n  fill: transparent;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .task {\r\n  fill: #8a88c9;\r\n  stroke: #5f5caf;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .task[class*=\"done\"] {\r\n  fill: #6b6b6b;\r\n  stroke: #3d3d3d;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .task[class*=\"active\"] {\r\n  fill: #737cff;\r\n  stroke: #413da0;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .task[class*=\"crit\"] {\r\n  fill: #d66979;\r\n  stroke: #8f1d22;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .task[class*=\"Crit\"] {\r\n  stroke: #8f1d22;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] text {\r\n  fill: #ddd;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] text[class*=\"activeText\"], #write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] text[class*=\"activeCritText\"] {\r\n  fill: #ddd !important;\r\n  font-weight: bold;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] text[class*=\"doneText\"], #write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] text[class*=\"doneCritText\"] {\r\n  fill: #5b5b5b !important;\r\n}\r\n\r\n#write pre[lang=\"mermaid\"][mermaid-type=\"gantt\"] .grid .tick line {\r\n  stroke: #ddd;\r\n}\r\n\r\n.modal-content .modal-header, .modal-content .modal-footer {\r\n  border-color: #5b5b5b;\r\n}\r\n\r\n.modal-content input, .modal-content button.btn-default {\r\n  border-color: #5b5b5b;\r\n}\r\n\r\n.modal-content input {\r\n  background: transparent;\r\n}\r\n\r\n#typora-quick-open {\r\n  top: 32px;\r\n  width: 40%;\r\n  min-width: 420px;\r\n  transform: translateX(-50%);\r\n  margin-left: 0;\r\n}\r\n\r\n.mac-seamless-mode #typora-quick-open {\r\n  top: 50px;\r\n}\r\n\r\n#typora-quick-open #typora-quick-open-input input {\r\n  border-color: #428bca;\r\n}\r\n\r\n#typora-quick-open .ty-quick-open-category-title {\r\n  height: auto;\r\n  padding-top: 4px;\r\n  padding-left: 12px;\r\n}\r\n\r\n#typora-quick-open .typora-quick-open-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n}\r\n\r\n#typora-quick-open .typora-quick-open-item:not(.active):hover {\r\n  background: #212121;\r\n}\r\n\r\n#typora-quick-open .typora-quick-open-item-path {\r\n  margin-top: -2px;\r\n}\r\n\r\n.ty-tooltip {\r\n  background: #2b2b2b;\r\n  color: #ddd;\r\n  border-color: #00000040;\r\n}\r\n\r\n.code-tooltip.md-f-tooltip, .code-tooltip.md-f-tooltip .md-arrow::after {\r\n  background: #111 !important;\r\n  color: #ddd !important;\r\n}\r\n\r\n.code-tooltip.md-f-tooltip a {\r\n  color: #6bcafb;\r\n}\r\n\r\n.on-focus-mode .md-end-block:not(.md-focus):not(.md-focus-container), .on-focus-mode .md-end-block:not(.md-focus):not(.md-focus-container) *, .on-focus-mode .md-end-block:not(.md-focus):not(.md-focus-container) ol, .on-focus-mode .md-end-block:not(.md-focus):not(.md-focus-container) ul {\r\n  color: #5b5b5b !important;\r\n}\r\n\r\n.on-focus-mode .md-end-block:not(.md-focus):not(.md-focus-container) img, .on-focus-mode .md-end-block:not(.md-focus):not(.md-focus-container) .md-footnote, .on-focus-mode .md-end-block:not(.md-focus):not(.md-focus-container) .md-emoji {\r\n  opacity: .5;\r\n}\r\n\r\n.on-focus-mode .md-end-block:not(.md-focus):not(.md-focus-container) mark {\r\n  background: #3c3c3c;\r\n}\r\n\r\n.on-focus-mode blockquote .md-end-block:not(.md-focus):not(.md-focus-container)::before {\r\n  opacity: .5;\r\n}\r\n\r\n.on-focus-mode li:not(.md-focus-container)::before {\r\n  opacity: .5;\r\n}\r\n\r\n#typora-sidebar {\r\n  border-right: 1px solid #19191c;\r\n}\r\n\r\n#typora-sidebar .sidebar-tabs {\r\n  font-family: 'Adelle', 'Times New Roman', serif;\r\n  border-bottom: 1px solid #19191c;\r\n}\r\n\r\n#typora-sidebar .file-list-item-file-name {\r\n  font-family: 'Adelle', 'Times New Roman', serif;\r\n  font-size: 1.2em;\r\n}\r\n\r\n#typora-sidebar #file-library-search-input {\r\n  background: #2b2b2b;\r\n}\r\n\r\n#typora-sidebar #file-library-search .file-list-item-file-name {\r\n  font-size: 1.1rem;\r\n}\r\n\r\n#typora-sidebar #file-library-search .ty-search-item.active {\r\n  background: #212121;\r\n}\r\n\r\n#typora-sidebar .file-list-item-summary,\r\n#typora-sidebar .ty-search-item-line {\r\n  font-family: 'Avenir Next LT Pro', 'Lato', sans-serif;\r\n}\r\n\r\n#typora-sidebar .ty-file-search-match-text,\r\n#typora-sidebar .ty-outline-hit {\r\n  font-weight: bold;\r\n  background: transparent;\r\n}\r\n\r\n#typora-sidebar #outline-content {\r\n  line-height: 1.4em;\r\n}\r\n\r\n#typora-sidebar #outline-content .outline-h1 > .outline-item {\r\n  font-family: 'Adelle', 'Times New Roman', serif;\r\n}\r\n\r\n#typora-sidebar .outline-title-wrapper,\r\n#typora-sidebar .outline-item-wrapper.outline-h1 > .outline-item {\r\n  font-family: 'Adelle', 'Times New Roman', serif;\r\n}\r\n\r\n#typora-sidebar .file-library-node,\r\n#typora-sidebar .file-library-node .file-node-background {\r\n  transition: background .4s;\r\n}\r\n\r\n#typora-sidebar .file-tree-node.file-library-file-node:not(.active):hover .file-node-background,\r\n#typora-sidebar .file-list-item.file-library-node:not(.active):hover {\r\n  background: #1e2022;\r\n}\r\n\r\n#typora-sidebar .file-tree-node.file-library-file-node.active .file-node-background,\r\n#typora-sidebar .file-list-item.file-library-file-node.active {\r\n  border-left: 5px solid #428bca;\r\n}\r\n\r\n#typora-sidebar .blink-area {\r\n  animation: none;\r\n}\r\n\r\n#typora-sidebar #ty-sidebar-footer {\r\n  border-top: 1px solid #19191c;\r\n}\r\n\r\n#typora-sidebar #ty-sidebar-footer .sidebar-footer-item {\r\n  transition: background .3s;\r\n}\r\n\r\n.dropdown-menu .active a,\r\n.dropdown-menu .has-extra-menu.active a,\r\n.dropdown-menu .has-btn-submenu .menu-style-btn.active, #footer-word-count-info .ty-footer-word-count-all tr:hover,\r\n#ty-spell-check-dict-missing-menu li:hover, .ty-spell-check-panel-item.ty-active, .ty-spell-check-panel-item:hover, .footer-item:hover {\r\n  background: #ddd !important;\r\n  color: #2b2b2b !important;\r\n}\r\n\r\n.btn-default:hover {\r\n  background: #3c3c3c;\r\n}\r\n\r\nfooter.ty-footer {\r\n  border-top: 0;\r\n}\r\n\r\n#outline-btn:hover {\r\n  color: inherit;\r\n}\r\n\r\n.form-control:focus {\r\n  border-color: #428bca;\r\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 2px #428bca;\r\n}\r\n\r\n.megamenu-opened header {\r\n  background-image: none;\r\n}\r\n\r\n#top-titlebar, #top-titlebar * {\r\n  color: inherit;\r\n}\r\n\r\n#megamenu-content {\r\n  padding-top: 28px;\r\n  background: #2b2b2b;\r\n  color: #ddd;\r\n}\r\n\r\n#megamenu-content .long-btn {\r\n  border-color: #9292928f;\r\n  transition: border-color .4s;\r\n}\r\n\r\n#megamenu-content .long-btn:hover {\r\n  border-color: #428bca;\r\n  background: #1e2022;\r\n  color: #fff !important;\r\n}\r\n\r\n#megamenu-menu-panel:not(:first-of-type) {\r\n  margin-top: 48px;\r\n}\r\n\r\n#recent-file-panel-action-btn {\r\n  background: inherit;\r\n  border-color: #9292928f;\r\n  transition: all .4s;\r\n}\r\n\r\n#recent-file-panel-action-btn:hover {\r\n  border-color: #428bca;\r\n  background: #1e2022;\r\n  color: #fff;\r\n}\r\n\r\n#recent-document-table {\r\n  background-color: inherit;\r\n}\r\n\r\n#recent-file-panel tbody tr:nth-child(2n-1) {\r\n  background-color: inherit;\r\n}\r\n\r\n#recent-file-panel tbody tr:hover {\r\n  background-color: #1e2022 !important;\r\n}\r\n\r\n#recent-file-panel tbody tr:hover td:nth-child(1) {\r\n  color: #fff;\r\n}\r\n\r\n#megamenu-menu-sidebar {\r\n  background-color: #1e2022;\r\n  color: #ddd;\r\n}\r\n\r\n.megamenu-menu-header,\r\n.megamenu-menu-list li:not(.saved) a {\r\n  transition: all .4s;\r\n}\r\n\r\n.megamenu-menu-header {\r\n  border-bottom: 1px solid #16161a;\r\n}\r\n\r\n.megamenu-menu-header:hover {\r\n  background: #161819;\r\n}\r\n\r\n.megamenu-menu-list li:not(.saved) a:not(.active):hover,\r\n.megamenu-menu-list li a.active {\r\n  background: #101010 !important;\r\n}\r\n\r\n#m-saved {\r\n  background: inherit;\r\n  color: inherit;\r\n}\r\n\r\n#megamenu-menu-list {\r\n  margin: 0;\r\n}\r\n\r\n.theme-preview-div {\r\n  transition: all .4s;\r\n}\r\n\r\n.theme-preview-div:hover {\r\n  border: 4px solid #285e8e;\r\n}\r\n\r\n.theme-preview-div.active, .theme-preview-div.active:hover {\r\n  border: 4px solid #428bca;\r\n}\r\n\r\n.theme-preview-div.active i {\r\n  color: #428bca;\r\n}\r\n\r\n.ty-preferences .window {\r\n  background: #2b2b2b;\r\n}\r\n\r\n.ty-preferences .nav-group-item {\r\n  background: transparent;\r\n  color: #ddd;\r\n  cursor: pointer;\r\n}\r\n\r\n.ty-preferences .nav-group-item:hover {\r\n  background: #1e2022;\r\n  color: inherit;\r\n}\r\n\r\n.ty-preferences .nav-group-item:active, .ty-preferences .nav-group-item.active {\r\n  background: #181818;\r\n  color: inherit;\r\n}\r\n\r\n.ty-preferences .btn-default {\r\n  background: transparent;\r\n  color: inherit;\r\n  border-color: #9292928f;\r\n  cursor: pointer;\r\n}\r\n\r\n.ty-preferences .btn-default:hover {\r\n  border-color: #428bca;\r\n  background: #1e2022;\r\n  color: #fff;\r\n}\r\n\r\n.ty-preferences .btn-default:active, .ty-preferences .btn-default.active {\r\n  background: #181818;\r\n}\r\n\r\n.ty-preferences select,\r\n.ty-preferences ul.dropdown-menu {\r\n  border-color: #9292928f;\r\n  background: #2b2b2b;\r\n}\r\n\r\n.ty-preferences ul.dropdown-menu li {\r\n  background: #2b2b2b;\r\n}\r\n\r\n.ty-preferences ul.dropdown-menu li:hover {\r\n  background: #1e2022;\r\n}\r\n\r\n.cm-s-typora-default .cm-s-inner.CodeMirror-line {\r\n  border: 0 !important;\r\n}\r\n\r\n#write > p:first-child:empty {\r\n  position: static;\r\n}\r\n\r\n#write > p:first-child:not(:only-child)::before, #write > p:only-child::before {\r\n  content: '';\r\n  display: block;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: url(\"file:///C://Users//super//AppData//Roaming//Typora/themes/darcula/tiger.png\") no-repeat 45% 90% transparent;\r\n  background-size: cover;\r\n  -webkit-background-size: cover;\r\n  -moz-background-size: cover;\r\n  -o-background-size: cover;\r\n  opacity: 0;\r\n}\r\n\r\n#write > p:only-child:empty::before {\r\n  opacity: 1;\r\n}\r\n\r\n@media print {\r\n  #write ol > li, #write ul > li {\r\n    color: #ddd;\r\n  }\r\n}\r\n\r\n\r\n\r\n</style>\r\n</head>\r\n<body class='typora-export os-windows' >\r\n<div  id='write'  class = 'is-node'><h1><a name=\"tree04---balancing-binary-search-trees\" class=\"md-header-anchor\"></a><span>Tree04 - Balancing Binary Search Trees</span></h1><ul><li><span>Tree Rotation</span></li><li><span>Root insertion</span></li><li><span>Partitioning</span></li></ul><p>&nbsp;</p><h2><a name=\"-tree-rotation\" class=\"md-header-anchor\"></a><span>Tree Rotation</span></h2><p><img src=\"Tree04 - Balancing Binary Search Trees.assets/image-20200323134828807.png\" referrerpolicy=\"no-referrer\" alt=\"image-20200323134828807\"></p><ul><li><p><span>Reconnecting only 2 edges</span></p></li><li><p><span>Making a child node the new parent node</span></p></li><li><p><strong><u><span>If I&#39;m rotating, right, I&#39;m making left node the new root node</span></u></strong></p><ul><li><span>Easiest way to figure out how rotation will look imo</span></li></ul></li></ul><p>&nbsp;</p><h3><a name=\"rotating-right\" class=\"md-header-anchor\"></a><span>Rotating Right</span></h3><ul><li><span>Left node becomes new parent node</span></li></ul><pre spellcheck=\"false\" class=\"md-fences md-end-block ty-contain-cm modeLoaded\" lang=\"pseudocode\"><div class=\"CodeMirror cm-s-inner CodeMirror-wrap\" lang=\"pseudocode\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 0px; left: 4.16663px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">rotate_right</span><span class=\"cm-bracket\">(</span><span class=\"cm-variable\">root</span><span class=\"cm-bracket\">):</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-variable\">newRoot</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">root</span><span class=\"cm-operator\">-&gt;</span><span class=\"cm-variable\">left</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-variable\">root</span><span class=\"cm-operator\">-&gt;</span><span class=\"cm-variable\">left</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">newRoot</span><span class=\"cm-operator\">-&gt;</span><span class=\"cm-variable\">right</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-variable\">newRoot</span><span class=\"cm-operator\">-&gt;</span><span class=\"cm-variable\">right</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">root</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">newRoot</span></span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 108px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 108px;\"></div></div></div></pre><ul><li><span>If you are keeping track of height, need to readjust heights</span></li></ul><p>&nbsp;</p><h3><a name=\"rotating-left\" class=\"md-header-anchor\"></a><span>Rotating Left</span></h3><ul><li><span>Right node becomes new parent node</span></li></ul><pre spellcheck=\"false\" class=\"md-fences md-end-block ty-contain-cm modeLoaded\" lang=\"pseudocode\"><div class=\"CodeMirror cm-s-inner CodeMirror-wrap\" lang=\"pseudocode\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 0px; left: 4.16663px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">rotate_left</span><span class=\"cm-bracket\">(</span><span class=\"cm-variable\">root</span><span class=\"cm-bracket\">):</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-variable\">newRoot</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">root</span><span class=\"cm-operator\">-&gt;</span><span class=\"cm-variable\">right</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-variable\">root</span><span class=\"cm-operator\">-&gt;</span><span class=\"cm-variable\">right</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">newRoot</span><span class=\"cm-operator\">-&gt;</span><span class=\"cm-variable\">left</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-variable\">newRoot</span><span class=\"cm-operator\">-&gt;</span><span class=\"cm-variable\">left</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">root</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">newRoot</span></span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 108px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 108px;\"></div></div></div></pre><p>&nbsp;</p><h2><a name=\"root-insertion\" class=\"md-header-anchor\"></a><span>Root Insertion</span></h2><ul><li><span>Puts recently inserted items close to root</span></li><li><span>Low search cost if most recently used items are accessed more often</span></li><li><span>Disadvantage - rearrangement of tree per insertion</span></li><li><span>Implementation:</span></li></ul><pre spellcheck=\"false\" class=\"md-fences md-end-block ty-contain-cm modeLoaded\" lang=\"pseudocode\"><div class=\"CodeMirror cm-s-inner CodeMirror-wrap\" lang=\"pseudocode\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 0px; left: 3.99738px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><span><span>​</span>x</span></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-number\">1</span>. <span class=\"cm-variable\">Insert</span> <span class=\"cm-variable\">node</span> <span class=\"cm-variable\">normally</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-number\">2</span>. <span class=\"cm-keyword\">If</span> <span class=\"cm-variable\">curr</span> <span class=\"cm-variable\">node</span> <span class=\"cm-keyword\">is</span> <span class=\"cm-variable\">left</span> <span class=\"cm-variable\">child</span>, <span class=\"cm-variable\">rotate</span> <span class=\"cm-variable\">right</span> <span class=\"cm-keyword\">and</span> <span class=\"cm-variable\">vice</span> <span class=\"cm-variable\">versa</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\">​</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">Tree</span> <span class=\"cm-variable\">insertAtRoot</span><span class=\"cm-bracket\">(</span><span class=\"cm-variable\">root</span>, <span class=\"cm-variable\">newNode</span><span class=\"cm-bracket\">):</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-keyword\">if</span> <span class=\"cm-bracket\">(</span><span class=\"cm-variable\">root</span> <span class=\"cm-operator\">==</span> <span class=\"cm-atom\">NULL</span><span class=\"cm-bracket\">)</span> <span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">newNode</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\">​</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-variable\">go</span> <span class=\"cm-variable\">left</span> <span class=\"cm-keyword\">if</span> <span class=\"cm-variable\">newNode</span> <span class=\"cm-keyword\">is</span> <span class=\"cm-variable\">smaller</span><span class=\"cm-bracket\">:</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-variable\">root</span><span class=\"cm-operator\">-&gt;</span><span class=\"cm-variable\">left</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">insertAtRoot</span><span class=\"cm-bracket\">(</span><span class=\"cm-variable\">root</span><span class=\"cm-operator\">-&gt;</span><span class=\"cm-variable\">left</span>, <span class=\"cm-variable\">newNode</span><span class=\"cm-bracket\">)</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-variable\">rotateRight</span><span class=\"cm-bracket\">()</span> <span class=\"cm-doc\">// Since we went down left subtree</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-variable\">go</span> <span class=\"cm-variable\">right</span> <span class=\"cm-keyword\">if</span> <span class=\"cm-variable\">newNode</span> <span class=\"cm-keyword\">is</span> <span class=\"cm-variable\">bigger</span><span class=\"cm-bracket\">:</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-variable\">insertAtRoot</span><span class=\"cm-bracket\">(</span><span class=\"cm-variable\">root</span><span class=\"cm-operator\">-&gt;</span><span class=\"cm-variable\">right</span>, <span class=\"cm-variable\">newNode</span><span class=\"cm-bracket\">)</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-variable\">rotateLeft</span><span class=\"cm-bracket\">()</span> <span class=\"cm-doc\">// Since we went down left subtree</span></span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 260px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 260px;\"></div></div></div></pre><p><img src=\"Tree04 - Balancing Binary Search Trees.assets/image-20200324113923266.png\" referrerpolicy=\"no-referrer\" alt=\"image-20200324113923266\"></p><ul><li><span>Time complexity O(h)</span></li><li><span>Tends to be balanced but no guarantee</span></li><li><span>Can also move searched for items to root instead of just inserted items (slight self balancing and makes search for commonly searched items better)</span></li></ul><p>&nbsp;</p><h2><a name=\"partitioning\" class=\"md-header-anchor\"></a><span>Partitioning</span></h2><ul><li><p><span>Rearranges the tree so that the i&#39;th node is root node</span></p><ul><li><span>where i is the index of the tree (imaginary though, we don&#39;t store index)</span></li></ul></li></ul><p><img src=\"Tree04 - Balancing Binary Search Trees.assets/image-20200324121820439.png\" referrerpolicy=\"no-referrer\" alt=\"image-20200324121820439\"></p><ul><li><p><span>Basically:</span></p><ul><li><ol start='' ><li><span>Find i&#39;th node</span></li><li><span>Rotate it to root</span></li></ol></li></ul></li><li><p><span>Assign index = 0 to n-1, in order from smallest to largest</span></p></li><li><p><span>To find the i&#39;th node, we need to know the number of nodes in each subtree</span></p><ul><li><p><span>e.g. M-&gt;left has 6 nodes, M-&gt;right has 4 nodes </span></p><ul><li><span>set </span><code>m = 6 nodes</code></li></ul></li><li><p><span>If we want i=5, we know it&#39;s on the left (</span><code>i &lt; m</code><span>), so it must be in the left tree</span></p></li><li><p><span>If we want i=6, we know it&#39;s the root node (</span><code>i == m</code><span>), we don&#39;t need to do anything</span></p></li><li><p><span>If we want i=7, we know it&#39;s in the right (</span><code>i &gt; m</code><span>)</span></p><ul><li><p><span>We go right with </span><code>i-m-1 = 0</code><span> </span></p><ul><li><span>At Q, we see that i=0 &lt; m, so we go left</span></li><li><span>At P, we see </span><code>i=0 == m=0 (since left node is empty)</code></li></ul></li></ul></li></ul></li></ul><pre spellcheck=\"false\" class=\"md-fences md-end-block ty-contain-cm modeLoaded\" lang=\"pseudocode\"><div class=\"CodeMirror cm-s-inner CodeMirror-wrap\" lang=\"pseudocode\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 0px; left: 4.16663px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">partition</span><span class=\"cm-bracket\">(</span><span class=\"cm-variable\">tree</span>, <span class=\"cm-variable\">i</span><span class=\"cm-bracket\">):</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-variable\">m</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">size</span><span class=\"cm-bracket\">(</span><span class=\"cm-variable\">tree</span><span class=\"cm-operator\">-&gt;</span><span class=\"cm-variable\">left</span><span class=\"cm-bracket\">)</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-keyword\">if</span> <span class=\"cm-bracket\">(</span><span class=\"cm-variable\">i</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-variable\">m</span><span class=\"cm-bracket\">):</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-variable\">tree</span><span class=\"cm-operator\">-&gt;</span><span class=\"cm-variable\">left</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">partition</span><span class=\"cm-bracket\">(</span><span class=\"cm-variable\">tree</span><span class=\"cm-operator\">-&gt;</span><span class=\"cm-variable\">left</span>, <span class=\"cm-variable\">i</span><span class=\"cm-bracket\">)</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-variable\">tree</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">rotateRight</span><span class=\"cm-bracket\">(</span><span class=\"cm-variable\">tree</span><span class=\"cm-bracket\">)</span> &nbsp;<span class=\"cm-doc\">// Need to rotate the i'th node up to root</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-keyword\">if</span> <span class=\"cm-bracket\">(</span><span class=\"cm-variable\">i</span> <span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">m</span><span class=\"cm-bracket\">):</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-variable\">tree</span><span class=\"cm-operator\">-&gt;</span><span class=\"cm-variable\">right</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">partition</span><span class=\"cm-bracket\">(</span><span class=\"cm-variable\">tree</span><span class=\"cm-operator\">-&gt;</span><span class=\"cm-variable\">right</span>, <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">-</span> <span class=\"cm-variable\">m</span> <span class=\"cm-operator\">-</span> <span class=\"cm-number\">1</span><span class=\"cm-bracket\">)</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\">​</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; <span class=\"cm-variable\">tree</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">rotateLeft</span><span class=\"cm-bracket\">(</span><span class=\"cm-variable\">tree</span><span class=\"cm-bracket\">)</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" class=\"cm-tab-wrap-hack\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">Tree</span></span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 238px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 238px;\"></div></div></div></pre><ul><li><p><span>Note, i-m-1 since we</span></p><ul><li><span>Remove all the root-&gt;left nodes as a possibility == m</span></li><li><span>Remove the root node == 1</span></li><li><span>Only consider what&#39;s left over</span></li></ul></li><li><p><span>We get </span><code>i - m - 1</code></p></li></ul><p>&nbsp;</p><h2><a name=\"rebalancing-trees\" class=\"md-header-anchor\"></a><span>Rebalancing Trees</span></h2><pre spellcheck=\"false\" class=\"md-fences md-end-block ty-contain-cm modeLoaded\" lang=\"pseudocode\"><div class=\"CodeMirror cm-s-inner CodeMirror-wrap\" lang=\"pseudocode\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 0px; left: 4.16663px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">Rebalance</span><span class=\"cm-bracket\">(</span><span class=\"cm-variable\">tree</span><span class=\"cm-bracket\">):</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-keyword\">if</span> <span class=\"cm-bracket\">(</span><span class=\"cm-variable\">size</span><span class=\"cm-bracket\">(</span><span class=\"cm-variable\">tree</span><span class=\"cm-bracket\">)</span> <span class=\"cm-operator\">&gt;=</span> <span class=\"cm-number\">3</span><span class=\"cm-bracket\">):</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-variable\">t</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">partition</span><span class=\"cm-bracket\">(</span><span class=\"cm-variable\">t</span>, <span class=\"cm-variable\">n</span>/2<span class=\"cm-bracket\">)</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-variable\">tree</span><span class=\"cm-operator\">-&gt;</span><span class=\"cm-variable\">left</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">rebalance</span><span class=\"cm-bracket\">(</span><span class=\"cm-variable\">tree</span><span class=\"cm-operator\">-&gt;</span><span class=\"cm-variable\">left</span><span class=\"cm-bracket\">)</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-variable\">tree</span><span class=\"cm-operator\">-&gt;</span><span class=\"cm-variable\">right</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">rebalance</span><span class=\"cm-bracket\">(</span><span class=\"cm-variable\">tree</span><span class=\"cm-operator\">-&gt;</span><span class=\"cm-variable\">right</span><span class=\"cm-bracket\">)</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" class=\"cm-tab-wrap-hack\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">t</span></span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 152px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 152px;\"></div></div></div></pre><ul><li><span>If the tree is only 1-2 nodes, it is balanced</span></li></ul><ol start='' ><li><span>Make the middle index node the new root node (making the root node perfectly balanced)</span></li><li><span>Repeat for the left side (make root-&gt;left balanced, then root-&gt;left-&gt;left etc.)</span></li><li><span>Repeat for the right side</span></li></ol><ul><li><span>Basically constantly taking the middle index and setting it to the root node repeatedly</span></li></ul><p>&nbsp;</p><p>&nbsp;</p></div>\r\n</body>\r\n</html>`","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. ResumePage is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\n\r\nexport default function NotFound(){\r\n    return(\r\n        <h2>Not Found</h2>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport \"../styles/darcula.css\";\r\nimport \"../style/typewriter.css\"\r\nimport hljs from \"highlight.js\"\r\n\r\nconst typingSpeed = 50;\r\nexport default function TypeWriter(props) {\r\n    // Track what the current substring being displayed is\r\n    const [state, setState] = useState(\"\");\r\n\r\n    // Start typeWriter loop\r\n    \r\n    useEffect(() =>\r\n        {\r\n            let curr = 0;\r\n            let timer: NodeJS.Timeout;\r\n            function getCurrText() {\r\n                curr++;\r\n                // not ideal with jsx elements since hljs removes its own styling elems while the next elem is being typed\r\n                return hljs.highlight(\"javascript\", props.message.substring(0, curr)).value;\r\n            }\r\n            function startTyping() {\r\n                setState(getCurrText());\r\n                timer = setTimeout(startTyping, typingSpeed);\r\n            }\r\n            startTyping();\r\n\r\n            return () => {clearTimeout(timer)};\r\n\r\n            // note props.message does not update. This is just a componentDidMount\r\n            // added here since it's a dependency for the array\r\n        }, [props.message]\r\n    );\r\n\r\n\r\n    return(\r\n        <div id={\"mainPageCode\"}>\r\n            <pre><code dangerouslySetInnerHTML={{__html: state}}/></pre>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport \"../style/first_page.css\"\r\nimport TypeWriter from \"./HighlightCode\";\r\n\r\nexport default function FirstPage() {\r\n    return (\r\n        <div id={\"first_page\"}>\r\n            <div id={\"myNameParent\"}>\r\n                <div id={\"myName\"}> Toshi Tabata </div>\r\n            </div>\r\n            <TypeWriter message={\r\n`import React, {useEffect, useState} from \"react\";\r\nimport \"../styles/darcula.css\";\r\nimport \"../style/typewriter.css\"\r\nimport Highlight from \"./highlight\";\r\n\r\nconst typingSpeed = 100;\r\nexport default function TypeWriter(props) {\r\n    const [state, setState] = useState(\"\");\r\n    // Start typeWriter loop\r\n    useEffect(() => {\r\n            let timer:any = \"\";\r\n            function startTyping() {\r\n                setState(currState => (\r\n                    getCurrText(currState)\r\n                ));\r\n                timer = setTimeout(startTyping, typingSpeed)\r\n            }\r\n            startTyping();\r\n            return () => clearTimeout(timer);\r\n        }, []\r\n    );\r\n\r\n    function getCurrText(state) {\r\n        return props.message.substring(0, state.length + 1);\r\n    }\r\n    return(\r\n        <div>\r\n            <pre>{state}</pre>\r\n        </div>\r\n    );\r\n}`\r\n            }>\r\n            </TypeWriter>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"../style/second_page.css\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\n// TODO: Make this project page nicer\r\n//  Have a panel for each project with a links to them\r\n//  https://i.imgur.com/4Ejtb77.png\r\n// TODO: Add the 3d UWP app that I have somewhere for the video call i think it's on my laptop\r\n// TODO: get the video call working\r\nexport default function SecondPage() {\r\n\r\n    return (\r\n        <div id={\"second_page\"}>\r\n            My Projects (this is a HUGE work in progress):\r\n            <div>\r\n            Videos:\r\n                <br/>\r\n                    Video call with a 2D UWP app on the HoloLens\r\n                <br/>\r\n                <p style={{marginLeft:\"50px\", marginRight:\"50px\"}}>\r\n                    https://www.youtube.com/watch?v=1ik82w6xcN0\r\n                </p>\r\n\r\n                <br/>\r\n                HoloLense Map Pathing\r\n                <p style={{marginLeft:\"50px\", marginRight:\"50px\"}}>\r\n                    https://www.youtube.com/watch?v=naWj402wGYU\r\n                </p>\r\n\r\n\r\n                <br/>\r\n                HoloLens Map Rotation\r\n                <p style={{marginLeft:\"50px\", marginRight:\"50px\"}}>\r\n                    https://www.youtube.com/watch?v=BM58lvFIOI4\r\n                </p>\r\n\r\n            </div>\r\n\r\n            <a href=\"https://toshi-tabata.github.io/draw/\">\r\n                <button>Apple Pencil Drawing</button>\r\n            </a>\r\n\r\n            <a href=\"https://toshi-tabata.github.io/feirreact/\">\r\n                <button>Fire Engineering Inspection Report Editor</button>\r\n            </a>\r\n             <a href=\"https://toshi-tabata.github.io/FEIR_screen_record/FEIR/table\">\r\n                <button>Screen Recording</button>\r\n            </a>\r\n             <a href=\"https://github.com/Toshi-Tabata/COMP2521_ass1\">\r\n                <button>Information Retrieval and Search (broken link until assignment deadline is over)</button>\r\n            </a>\r\n            <a href=\"https://github.com/Toshi-Tabata/Binary-search-tree-operations\">\r\n                <button>Binary Search Tree Implementations in C</button>\r\n            </a>\r\n             <a href=\"https://github.com/Toshi-Tabata/pokedex\">\r\n                <button>Pokedex in C</button>\r\n            </a>\r\n            <a href=\"https://github.com/Toshi-Tabata/switchSoundDevice\">\r\n                <button>Keyboard Shortcut for Switching Sound Devices</button>\r\n            </a>\r\n\r\n            <a href=\"https://github.com/Toshi-Tabata/pokedex\">\r\n                <button>Pokedex in C</button>\r\n            </a>\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"../style/third_page.css\"\r\n\r\nexport default function ThirdPage() {\r\n    return (\r\n        <div id={\"third_page\"}>\r\n            Third Pepage\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport '../style/ResumePage.css';\nimport FirstPage from \"../components/first_page\";\nimport SecondPage from \"../components/second_page\";\nimport ThirdPage from \"../components/third_page\";\n\nconst ResumePage: React.FC = () => {\n    return (\n        <div id={\"pages\"}>\n            <FirstPage/>\n            <SecondPage/>\n            <ThirdPage/>\n\n\n        </div>\n    );\n};\n\nexport default ResumePage;\n","import React from \"react\";\r\nimport \"../style/toshi-darcula.css\"\r\n\r\nconst noteSrc = `https://github.com/Toshi-Tabata/UNSW-notes/blob/master/Toshi/comp2521%20Data%20Structs/Lecture%20notes/Graphs01%20-%20Graph%20Terminology%20and%20Properties.md#graphs01---graph-terminology-and-properties`;\r\n\r\nvar __html = require(\"../html/Tree04 - Balancing Binary Search Trees.html.js\");\r\nvar template = { __html: __html };\r\n\r\nexport default function NotesPage() {\r\n\r\n    return (\r\n        <div id={\"foobar\"}>\r\n            <iframe src={'https://www.google.com/'} height={1000} width={1000}> </iframe>\r\n            {/*<span dangerouslySetInnerHTML={template} />*/}\r\n        </div>\r\n    )\r\n}","import React, {Component} from \"react\";\r\nimport {BrowserRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\r\nimport NotFound from \"./views/notFound\";\r\nimport ResumePage from \"./views/ResumePage\"\r\nimport third_page from \"./components/third_page\";\r\nimport NotesPage from \"./components/notes\";\r\n\r\nexport default class WebsiteRouter extends Component{\r\n    render(){\r\n        return(\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <Switch>\r\n                    <Route exact path = {\"/\"} component={ResumePage}/>\r\n                    <Route path={\"/404\"} component={NotFound}/>\r\n                    <Route path={process.env.PUBLIC_URL + \"/hi\"} component={third_page}/>\r\n                    <Route path={\"/ho\"} component={third_page}/>\r\n                    <Route path={\"/hop/\"} component={third_page}/>\r\n                    <Route path={\"/home/hu\"} component={third_page}/>\r\n                    <Route path={\"/notes\"} component={NotesPage}/>\r\n                    <Redirect to={\"/404\"}/>\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport WebsiteRouter from \"./router\";\n\n\nReactDOM.render(<WebsiteRouter/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}